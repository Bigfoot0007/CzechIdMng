<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:activiti="http://activiti.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="eu.bcvsolutions.identity.roles.change">
  <process id="approve-identity-change-permissions" name="Change identity permissions" isExecutable="true">
    <documentation>Workflow for approve change of permissions (for applicant/identity) by given role request.

Input variables:
- entityEvent: event with IdmRoleRequestDto

Configuration properties:
- idm.sec.core.wf.approval.helpdesk.enabled: If is "false", then process will be not do approving by helpdesk
- idm.sec.core.wf.approval.helpdesk.role: Role using for find candates (approve by Helpdesk department)
- idm.sec.core.wf.approval.manager.enabled: If is "false", then process will be not do approving by manager
- idm.sec.core.wf.approval.usermanager.enabled: If is "false", then process will be not do approving by user manager
- idm.sec.core.wf.approval.usermanager.role: Role using for find candates (approve by User manage department)
- idm.sec.core.wf.approval.security.enabled: If is "false", then process will be not do approving by security
- idm.sec.core.wf.approval.security.role: Role using for find candates (approve by Security department)</documentation>
    <startEvent id="startevent1" name="Start"></startEvent>
    <exclusiveGateway id="exclusivegateway1" name="Exclusive Gateway"></exclusiveGateway>
    <userTask id="managerTask" name="Approve by help desk" activiti:candidateUsers="#{candidatesApproveByHelpDesk}" activiti:formKey="dynamicRoleTaskDetail" activiti:skipExpression="#{skipApproveByHelpDesk}">
      <documentation>${processInstanceName}</documentation>
      <extensionElements>
        <activiti:formProperty id="disapprove" type="decision"></activiti:formProperty>
        <activiti:formProperty id="backToApplicant" type="decision"></activiti:formProperty>
        <activiti:formProperty id="approve" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescriptionForApplicant" type="textArea" variable="managerDescription"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}" writable="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="exclusivegateway2" default="flow20"></exclusiveGateway>
    <sequenceFlow id="flow13" sourceRef="exclusivegateway2" targetRef="scripttask12">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("backToApplicant")}]]></conditionExpression>
    </sequenceFlow>
    <endEvent id="endByApplicant" name="Canceled by applicant">
      <documentation>Canceled by applicant</documentation>
    </endEvent>
    <userTask id="applicantReturnedTask" name="Returned request (from helpdesk)" activiti:assignee=" ${applicantUsername}" activiti:formKey="dynamicRoleTaskDetail">
      <documentation>Returned request for change permissions from helpdesk</documentation>
      <extensionElements>
        <activiti:formProperty id="cancelRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="repairedRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescription" type="textArea" variable="managerDescription" writable="false"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="flow15" sourceRef="applicantReturnedTask" targetRef="exclusivegateway1"></sequenceFlow>
    <callActivity id="startAddSubWorkflow" name="Approval assign of particular authorizations" calledElement="${roleService.findAssignRoleWorkflowDefinition(conceptRole.role) == null ? &quot;change-role-without-approve&quot; : roleService.findAssignRoleWorkflowDefinition(conceptRole.role) }">
      <extensionElements>
        <activiti:in source="applicantIdentifier" target="applicantIdentifier"></activiti:in>
        <activiti:in source="applicantUsername" target="applicantUsername"></activiti:in>
        <activiti:in source="approve" target="approve"></activiti:in>
        <activiti:in source="disapprove" target="disapprove"></activiti:in>
        <activiti:in sourceExpression="#{&quot;add&quot;}" target="operationType"></activiti:in>
        <activiti:in sourceExpression="#{conceptRole}" target="conceptRole"></activiti:in>
        <activiti:in sourceExpression="#{entityEvent.content.description}" target="applicantDescription"></activiti:in>
        <activiti:in source="implementerUsername" target="implementerUsername"></activiti:in>
        <activiti:in source="_ACTIVITI_SKIP_EXPRESSION_ENABLED" target="_ACTIVITI_SKIP_EXPRESSION_ENABLED"></activiti:in>
      </extensionElements>
      <multiInstanceLoopCharacteristics isSequential="false" activiti:collection="addedConceptRoles" activiti:elementVariable="conceptRole"></multiInstanceLoopCharacteristics>
    </callActivity>
    <sequenceFlow id="flow17" sourceRef="startAddSubWorkflow" targetRef="parallelgateway2"></sequenceFlow>
    <sequenceFlow id="flow19" sourceRef="managerTask" targetRef="exclusivegateway2"></sequenceFlow>
    <sequenceFlow id="flow21" sourceRef="scripttask1" targetRef="startAddSubWorkflow"></sequenceFlow>
    <scriptTask id="scripttask1" name="Loading concepts for add new permissions" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import org.joda.time.LocalDate;
          import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter;
          import eu.bcvsolutions.idm.core.api.domain.ConceptRoleRequestOperation

//Get request ID from event
def requestId = entityEvent.content.id;

//Search concept for operation change
ConceptRoleRequestFilter conceptFilter = new ConceptRoleRequestFilter();
conceptFilter.setRoleRequestId(requestId);
conceptFilter.setOperation(ConceptRoleRequestOperation.ADD);

def addedConceptRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

execution.setVariable("addedConceptRoles", addedConceptRoles);</script>
    </scriptTask>
    <serviceTask id="servicetaskCreateProcessName" name="Generating process name" activiti:expression="Change permissions request for &quot;${identityService.getNiceLabel(identityService.get(applicantIdentifier))}&quot;" activiti:resultVariableName="processInstanceName"></serviceTask>
    <sequenceFlow id="flow23" sourceRef="startevent1" targetRef="servicetaskCreateProcessName"></sequenceFlow>
    <scriptTask id="scripttask2" name="Loading concepts for change permissions" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import org.joda.time.LocalDate;
          import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter;
          import eu.bcvsolutions.idm.core.api.domain.ConceptRoleRequestOperation

//Get request ID from event
def requestId = entityEvent.content.id;

//Search concept for operation change
ConceptRoleRequestFilter conceptFilter = new ConceptRoleRequestFilter();
conceptFilter.setRoleRequestId(requestId);
conceptFilter.setOperation(ConceptRoleRequestOperation.UPDATE);

def changedConceptRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

execution.setVariable("changedConceptRoles", changedConceptRoles);</script>
    </scriptTask>
    <sequenceFlow id="flow24" sourceRef="parallelgateway1" targetRef="scripttask2"></sequenceFlow>
    <callActivity id="startChangeSubWorkflow" name="Approval change of particular authorizations" calledElement="${roleService.findChangeAssignRoleWorkflowDefinition(conceptRole.role) == null ? 'change-role-without-approve' : roleService.findChangeAssignRoleWorkflowDefinition(conceptRole.role) }">
      <extensionElements>
        <activiti:in source="applicantIdentifier" target="applicantIdentifier"></activiti:in>
        <activiti:in source="applicantUsername" target="applicantUsername"></activiti:in>
        <activiti:in source="approve" target="approve"></activiti:in>
        <activiti:in source="disapprove" target="disapprove"></activiti:in>
        <activiti:in sourceExpression="#{&quot;change&quot;}" target="operationType"></activiti:in>
        <activiti:in sourceExpression="#{conceptRole}" target="conceptRole"></activiti:in>
        <activiti:in sourceExpression="#{entityEvent.content.description}" target="applicantDescription"></activiti:in>
        <activiti:in source="implementerUsername" target="implementerUsername"></activiti:in>
        <activiti:in source="_ACTIVITI_SKIP_EXPRESSION_ENABLED" target="_ACTIVITI_SKIP_EXPRESSION_ENABLED"></activiti:in>
      </extensionElements>
      <multiInstanceLoopCharacteristics isSequential="false" activiti:collection="changedConceptRoles" activiti:elementVariable="conceptRole"></multiInstanceLoopCharacteristics>
    </callActivity>
    <sequenceFlow id="flow25" sourceRef="scripttask2" targetRef="startChangeSubWorkflow"></sequenceFlow>
    <parallelGateway id="parallelgateway1" name="Split to subprocesses"></parallelGateway>
    <sequenceFlow id="flow26" sourceRef="parallelgateway1" targetRef="scripttask1"></sequenceFlow>
    <parallelGateway id="parallelgateway2" name="Join all resolved subprocesses"></parallelGateway>
    <sequenceFlow id="flow28" sourceRef="startChangeSubWorkflow" targetRef="parallelgateway2"></sequenceFlow>
    <callActivity id="startRemoveSubWorkflow" name="Approval remove of particular authorizations" calledElement="${roleService.findUnAssignRoleWorkflowDefinition(conceptRole.role) == null ? 'change-role-without-approve' : roleService.findUnAssignRoleWorkflowDefinition(conceptRole.role) }">
      <extensionElements>
        <activiti:in source="identityIdentifier" target="identityIdentifier"></activiti:in>
        <activiti:in source="applicantIdentifier" target="applicantIdentifier"></activiti:in>
        <activiti:in source="applicantUsername" target="applicantUsername"></activiti:in>
        <activiti:in source="approve" target="approve"></activiti:in>
        <activiti:in source="disapprove" target="disapprove"></activiti:in>
        <activiti:in sourceExpression="#{&quot;remove&quot;}" target="operationType"></activiti:in>
        <activiti:in sourceExpression="#{conceptRole}" target="conceptRole"></activiti:in>
        <activiti:in sourceExpression="#{entityEvent.content.description}" target="applicantDescription"></activiti:in>
        <activiti:in source="implementerUsername" target="implementerUsername"></activiti:in>
        <activiti:in source="_ACTIVITI_SKIP_EXPRESSION_ENABLED" target="_ACTIVITI_SKIP_EXPRESSION_ENABLED"></activiti:in>
      </extensionElements>
      <multiInstanceLoopCharacteristics isSequential="false" activiti:collection="removedConceptRoles" activiti:elementVariable="conceptRole"></multiInstanceLoopCharacteristics>
    </callActivity>
    <scriptTask id="scripttask3" name="Loading concepts for remove assigned permissions" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import org.joda.time.LocalDate;
          import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter;
          import eu.bcvsolutions.idm.core.api.domain.ConceptRoleRequestOperation

//Get request ID from event
def requestId = entityEvent.content.id;

//Search concept for operation change
ConceptRoleRequestFilter conceptFilter = new ConceptRoleRequestFilter();
conceptFilter.setRoleRequestId(requestId);
conceptFilter.setOperation(ConceptRoleRequestOperation.REMOVE);

def removedConceptRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

execution.setVariable("removedConceptRoles", removedConceptRoles);</script>
    </scriptTask>
    <sequenceFlow id="flow29" sourceRef="scripttask3" targetRef="startRemoveSubWorkflow"></sequenceFlow>
    <sequenceFlow id="flow30" sourceRef="parallelgateway1" targetRef="scripttask3"></sequenceFlow>
    <sequenceFlow id="flow31" sourceRef="startRemoveSubWorkflow" targetRef="parallelgateway2"></sequenceFlow>
    <sequenceFlow id="flow33" sourceRef="servicetaskCreateProcessName" targetRef="scripttask5"></sequenceFlow>
    <sequenceFlow id="flow34" sourceRef="exclusivegateway1" targetRef="managerTask">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("repairedRequest")}]]></conditionExpression>
    </sequenceFlow>
    <serviceTask id="servicetaskRealization" name="Realization of request (evoke event)" activiti:expression="#{entityEventManager.process(entityEvent)}"></serviceTask>
    <endEvent id="endevent1" name="End"></endEvent>
    <sequenceFlow id="flow35" sourceRef="servicetaskRealization" targetRef="scripttask8"></sequenceFlow>
    <scriptTask id="scripttask4" name="Set request to approved" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.api.domain.RoleRequestState;
 
// Set and save state APPROVED to request
def requestDto = roleRequestService.getDto(entityEvent.content.id);
requestDto.setState(RoleRequestState.APPROVED);
roleRequestService.save(requestDto);</script>
    </scriptTask>
    <sequenceFlow id="flow36" sourceRef="scripttask4" targetRef="servicetaskRealization"></sequenceFlow>
    <sequenceFlow id="flow37" sourceRef="parallelgateway2" targetRef="scripttask7"></sequenceFlow>
    <scriptTask id="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501" name="Set request and concepts to disapproved" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter
          import eu.bcvsolutions.idm.core.api.domain.RoleRequestState;
 
 //Request was disapproved, now we set DISAPPROVE state to all concepts and request

 ConceptRoleRequestFilter filter = new ConceptRoleRequestFilter();
 filter.setRoleRequestId(entityEvent.content.id);

 for (concept in conceptRoleRequestService.findDto(filter, null).getContent()) {
	concept.setState(RoleRequestState.DISAPPROVED);
	conceptRoleRequestService.save(concept);
 }

// Set and save state DISAPPROVED to request
def requestDto = roleRequestService.getDto(entityEvent.content.id);
requestDto.setState(RoleRequestState.DISAPPROVED);
roleRequestService.save(requestDto);</script>
    </scriptTask>
    <scriptTask id="scripttask5" name="Find all helpdesk identities and resolve if we can skip next task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>boolean skip = false;
def helpdesks = null;

// Is approving by helpdesk enabled in application configuration? If not, then next task can be skipped
def configResult = configurationService.getValue("idm.sec.core.wf.approval.helpdesk.enabled");
if(configResult &amp;&amp; configResult.equals("false")){
	skip = true;
}

if(!skip){
  //Find all helpdesk identities
  helpdesks = identityService.findAllByRoleName(configurationService.getValue("idm.sec.core.wf.approval.helpdesk.role"));
  if(helpdesks.isEmpty()){
    helpdesks.add(identityService.getByUsername("admin"));
  }

  //Is current logged user = implemeneter user and is betwen helpdesks? If yes, then we can skip task.
  if(implementerUsername.equals(securityService.getUsername())){
    skip = identityService.containsUser(helpdesks, implementerUsername);
  }else{
    skip = false; 
 }
}

//Save skip resolution to variables
execution.setVariable("skipApproveByHelpDesk", skip);

if(!skip){
  // Convert all helpdesks to string separate by comma		
  def candidates = identityService.convertIdentitiesToString(helpdesks);

  //Save candidates to variables
  execution.setVariable("candidatesApproveByHelpDesk", candidates);
}</script>
    </scriptTask>
    <sequenceFlow id="flow38" sourceRef="scripttask5" targetRef="managerTask"></sequenceFlow>
    <exclusiveGateway id="sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4" name="Exclusive Gateway"></exclusiveGateway>
    <userTask id="sid-69F3488F-4175-4C5F-A034-77C5B7A378C6" name="Approve by manager" activiti:candidateUsers="#{candidatesApproveByManager}" activiti:formKey="dynamicRoleTaskDetail" activiti:skipExpression="#{skipApproveByManager}">
      <documentation>${processInstanceName}</documentation>
      <extensionElements>
        <activiti:formProperty id="disapprove" type="decision"></activiti:formProperty>
        <activiti:formProperty id="backToApplicant" type="decision"></activiti:formProperty>
        <activiti:formProperty id="approve" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescriptionForApplicant" type="textArea" variable="managerDescription"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}" writable="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="sid-CB31E93D-4436-474F-B565-D990B2AC1E64" default="sid-97770AD6-3F73-4833-B2EE-918194BBA074"></exclusiveGateway>
    <sequenceFlow id="sid-F6CF4663-29E1-49FB-AD56-EFDE0ECCB694" sourceRef="sid-CB31E93D-4436-474F-B565-D990B2AC1E64" targetRef="scripttask10">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("backToApplicant")}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="sid-9E6516EF-3FDE-4191-8134-33DEB6D7C507" name="Returned request (from manager)" activiti:assignee=" ${applicantUsername}" activiti:formKey="dynamicRoleTaskDetail">
      <documentation>Returned request for change permissions from manager</documentation>
      <extensionElements>
        <activiti:formProperty id="cancelRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="repairedRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescription" type="textArea" variable="managerDescription" writable="false"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="sid-503B495E-9455-44B9-8789-19E5D35765A9" sourceRef="sid-9E6516EF-3FDE-4191-8134-33DEB6D7C507" targetRef="sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4"></sequenceFlow>
    <sequenceFlow id="sid-4F213EDC-31DA-4044-87CC-A6DD1247E93C" sourceRef="sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4" targetRef="sid-69F3488F-4175-4C5F-A034-77C5B7A378C6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("repairedRequest")}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="sid-8554081E-2846-412C-A612-0F532ADABEDA" name="Find all applicant's managers and resolve if we can skip next task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>boolean skip = false;
def managers = null;

// Is approving by manager enabled in application configuration? If not, then next task can be skipped
def configResult = configurationService.getValue("idm.sec.core.wf.approval.manager.enabled");
if(configResult &amp;&amp; configResult.equals("false")){
	skip = true;
}

if(!skip){
  //Find all managers for applicant
  managers = identityService.findAllManagers(applicantIdentifier);
  if(managers.isEmpty()){
    managers.add(identityService.getByUsername("admin"));
  }

  //Is current logged user = implemeneter user and is betwen managers? If yes, then we can skip task.
  if(implementerUsername.equals(securityService.getUsername())){
    skip = identityService.containsUser(managers, implementerUsername);
  }else{
    skip = false; 
 }
}

//Save skip resolution to variables
execution.setVariable("skipApproveByManager", skip);

if(!skip){
  // Convert all managers to string separate by comma		
  def candidates = identityService.convertIdentitiesToString(managers);

  //Save candidates to variables
  execution.setVariable("candidatesApproveByManager", candidates);
}</script>
    </scriptTask>
    <sequenceFlow id="sid-044DD704-22AD-434D-B42E-DEDAE03BF3CC" sourceRef="sid-8554081E-2846-412C-A612-0F532ADABEDA" targetRef="sid-69F3488F-4175-4C5F-A034-77C5B7A378C6"></sequenceFlow>
    <exclusiveGateway id="sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E" name="Exclusive Gateway"></exclusiveGateway>
    <userTask id="sid-44411063-064E-4897-9B31-A9D29DE8DB3C" name="Approve by user manager" activiti:candidateUsers="#{candidatesApproveByUsermanager}" activiti:formKey="dynamicRoleTaskDetail" activiti:skipExpression="#{skipApproveByUsermanager}">
      <documentation>${processInstanceName}</documentation>
      <extensionElements>
        <activiti:formProperty id="disapprove" type="decision"></activiti:formProperty>
        <activiti:formProperty id="backToApplicant" type="decision"></activiti:formProperty>
        <activiti:formProperty id="approve" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescriptionForApplicant" type="textArea" variable="managerDescription"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}" writable="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <exclusiveGateway id="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471" default="sid-62F032AA-0D66-4AC4-9A9E-EC0276A2EEB3"></exclusiveGateway>
    <sequenceFlow id="sid-F12630E1-8728-4CCA-8E25-79A44942BD14" sourceRef="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471" targetRef="scripttask11">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("backToApplicant")}]]></conditionExpression>
    </sequenceFlow>
    <userTask id="sid-12381137-9285-460E-8CCD-BC43D5679026" name="Returned request (from user manager)" activiti:assignee=" ${applicantUsername}" activiti:formKey="dynamicRoleTaskDetail">
      <documentation>Returned request for change permissions from user manager</documentation>
      <extensionElements>
        <activiti:formProperty id="cancelRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="repairedRequest" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescription" type="textArea" variable="managerDescription" writable="false"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <sequenceFlow id="sid-0311903F-711C-4751-81EB-814842E975FD" sourceRef="sid-12381137-9285-460E-8CCD-BC43D5679026" targetRef="sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E"></sequenceFlow>
    <sequenceFlow id="sid-585E396A-7CD3-4EEB-A11D-E70EFEBC36FA" sourceRef="sid-44411063-064E-4897-9B31-A9D29DE8DB3C" targetRef="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471"></sequenceFlow>
    <sequenceFlow id="sid-2CD6BB31-9D9C-4039-B5A8-29F3E0252145" sourceRef="sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E" targetRef="sid-44411063-064E-4897-9B31-A9D29DE8DB3C">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("repairedRequest")}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="sid-3BE56C1C-CC6A-4DD2-AC41-AFCF1A6EC43E" name="Find all user managers and resolve if we can skip next task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>boolean skip = false;
def usermanagers = null;

// Is approving by user manager enabled in application configuration? If not, then next task can be skipped
def configResult = configurationService.getValue("idm.sec.core.wf.approval.usermanager.enabled");
if(configResult &amp;&amp; configResult.equals("false")){
	skip = true;
}

if(!skip){
  //Find all user managers
  usermanagers = identityService.findAllByRoleName(configurationService.getValue("idm.sec.core.wf.approval.usermanager.role"));
  if(usermanagers.isEmpty()){
    usermanagers.add(identityService.getByUsername("admin"));
  }
  //Is current logged user = implemeneter user and is betwen usermanagers? If yes, then we can skip task.
  if(implementerUsername.equals(securityService.getUsername())){
    skip = identityService.containsUser(usermanagers, implementerUsername);
  }else{
    skip = false; 
 }
}

//Save skip resolution to variables
execution.setVariable("skipApproveByUsermanager", skip);

if(!skip){
  // Convert all usermanagers to string separate by comma		
  def candidates = identityService.convertIdentitiesToString(usermanagers);

  //Save candidates to variables
  execution.setVariable("candidatesApproveByUsermanager", candidates);
}</script>
    </scriptTask>
    <sequenceFlow id="sid-DC0D03B6-CF3F-4073-8044-0CE01CBB7DB5" sourceRef="sid-3BE56C1C-CC6A-4DD2-AC41-AFCF1A6EC43E" targetRef="sid-44411063-064E-4897-9B31-A9D29DE8DB3C"></sequenceFlow>
    <sequenceFlow id="sid-A8901EF0-CE52-4DBA-B810-4E4E1964E8BA" sourceRef="sid-69F3488F-4175-4C5F-A034-77C5B7A378C6" targetRef="sid-CB31E93D-4436-474F-B565-D990B2AC1E64"></sequenceFlow>
    <sequenceFlow id="sid-97770AD6-3F73-4833-B2EE-918194BBA074" sourceRef="sid-CB31E93D-4436-474F-B565-D990B2AC1E64" targetRef="sid-3BE56C1C-CC6A-4DD2-AC41-AFCF1A6EC43E"></sequenceFlow>
    <sequenceFlow id="sid-62F032AA-0D66-4AC4-9A9E-EC0276A2EEB3" sourceRef="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471" targetRef="parallelgateway1"></sequenceFlow>
    <sequenceFlow id="flow10" sourceRef="exclusivegateway1" targetRef="scripttask6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("cancelRequest")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-0F52F310-CE09-4765-8108-7EC9E01F471F" sourceRef="sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4" targetRef="scripttask6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("cancelRequest")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-1EA1C0C6-CBF9-4951-AFF5-853485FCCE0A" sourceRef="sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E" targetRef="scripttask6">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("cancelRequest")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow20" sourceRef="exclusivegateway2" targetRef="sid-8554081E-2846-412C-A612-0F532ADABEDA"></sequenceFlow>
    <sequenceFlow id="flow8" sourceRef="exclusivegateway2" targetRef="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("disapprove")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-1904D1CD-F8B5-4866-87A1-252CDD40546C" sourceRef="sid-CB31E93D-4436-474F-B565-D990B2AC1E64" targetRef="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("disapprove")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="sid-D1AA78F2-3EF5-40BA-8DF8-B0BEADF3C7C9" sourceRef="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471" targetRef="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("disapprove")}]]></conditionExpression>
    </sequenceFlow>
    <scriptTask id="scripttask6" name="Set request and concepts to canceled by applicant" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter
          import eu.bcvsolutions.idm.core.api.domain.RoleRequestState;
 
 //Request was disapproved, now we set CANCELED state to all concepts and request

 ConceptRoleRequestFilter filter = new ConceptRoleRequestFilter();
 filter.setRoleRequestId(entityEvent.content.id);

 for (concept in conceptRoleRequestService.findDto(filter, null).getContent()) {
	concept.setState(RoleRequestState.CANCELED);
        conceptRoleRequestService.addToLog(concept, "Canceled by applicant");
	conceptRoleRequestService.save(concept);
 }

// Set and save state CANCELED to request
def requestDto = roleRequestService.getDto(entityEvent.content.id);
requestDto.setState(RoleRequestState.CANCELED);
roleRequestService.addToLog(requestDto, "Canceled by applicant");
roleRequestService.save(requestDto);</script>
    </scriptTask>
    <serviceTask id="servicetask1" name="Realization of request (evoke event)" activiti:expression="#{entityEventManager.process(entityEvent)}"></serviceTask>
    <sequenceFlow id="flow39" sourceRef="scripttask6" targetRef="servicetask1"></sequenceFlow>
    <sequenceFlow id="flow40" sourceRef="servicetask1" targetRef="endByApplicant"></sequenceFlow>
    <userTask id="usertask1" name="Approve by security" activiti:candidateUsers="#{candidatesApproveBySecurity}" activiti:formKey="dynamicRoleTaskDetail" activiti:skipExpression="#{skipApproveBySecurity}">
      <documentation>${processInstanceName}</documentation>
      <extensionElements>
        <activiti:formProperty id="disapprove" type="decision"></activiti:formProperty>
        <activiti:formProperty id="approve" type="decision"></activiti:formProperty>
        <activiti:formProperty id="managerDescriptionForApplicant" type="textArea" variable="managerDescription"></activiti:formProperty>
        <activiti:formProperty id="applicantDescription" type="textArea" expression="#{entityEvent.content.description}" writable="false"></activiti:formProperty>
      </extensionElements>
    </userTask>
    <scriptTask id="scripttask7" name="Find all identities with security role and resolve if we can skip next task" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>boolean skip = false;
def securities = null;

// Is approving by security enabled in application configuration? If not, then next task can be skipped
def configResult = configurationService.getValue("idm.sec.core.wf.approval.security.enabled");
if(configResult &amp;&amp; configResult.equals("false")){
	skip = true;
}

if(!skip){
  //Find all security identities
  securities = identityService.findAllByRoleName(configurationService.getValue("idm.sec.core.wf.approval.security.role"));
  if(securities.isEmpty()){
    securities.add(identityService.getByUsername("admin"));
  }

  //Is current logged user = implemeneter user and is betwen securities? If yes, then we can skip task.
  if(implementerUsername.equals(securityService.getUsername())){
    skip = identityService.containsUser(securities, implementerUsername);
  }else{
    skip = false; 
 }
}

//Save skip resolution to variables
execution.setVariable("skipApproveBySecurity", skip);

if(!skip){
  // Convert all securities to string separate by comma		
  def candidates = identityService.convertIdentitiesToString(securities);

  //Save candidates to variables
  execution.setVariable("candidatesApproveBySecurity", candidates);
}</script>
    </scriptTask>
    <sequenceFlow id="flow41" sourceRef="scripttask7" targetRef="usertask1"></sequenceFlow>
    <exclusiveGateway id="exclusivegateway3" name="Exclusive Gateway" default="flow43"></exclusiveGateway>
    <sequenceFlow id="flow42" sourceRef="usertask1" targetRef="exclusivegateway3"></sequenceFlow>
    <sequenceFlow id="flow43" sourceRef="exclusivegateway3" targetRef="scripttask4"></sequenceFlow>
    <sequenceFlow id="flow44" sourceRef="exclusivegateway3" targetRef="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501">
      <conditionExpression xsi:type="tFormalExpression"><![CDATA[${decision.equals("disapprove")}]]></conditionExpression>
    </sequenceFlow>
    <sequenceFlow id="flow45" sourceRef="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501" targetRef="scripttask9"></sequenceFlow>
    <dataObject id="approve" name="approve" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":false,"level":"success"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="disapprove" name="disapprove" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":true,"level":"danger"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="backToApplicant" name="backToApplicant" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":true,"level":"warning"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="createRequest" name="createRequest" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":false,"level":"success"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="cancelRequest" name="cancelRequest" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":true,"level":"danger"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="repairedRequest" name="repairedRequest" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>{"showWarning":false, "level":"success"}</activiti:value>
      </extensionElements>
    </dataObject>
    <dataObject id="applicantDescription" name="applicantDescription" itemSubjectRef="xsd:string"></dataObject>
    <dataObject id="decision" name="decision" itemSubjectRef="xsd:string">
      <extensionElements>
        <activiti:value>none</activiti:value>
      </extensionElements>
    </dataObject>
    <scriptTask id="scripttask8" name="Send notification with result (Success)" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <documentation>Send notification with template with result</documentation>
      <script>import eu.bcvsolutions.idm.core.notification.api.dto.IdmMessageDto;
import eu.bcvsolutions.idm.core.CoreModuleDescriptor;
import eu.bcvsolutions.idm.core.notification.api.domain.NotificationLevel;
          import eu.bcvsolutions.idm.core.api.dto.filter.ConceptRoleRequestFilter;
          import eu.bcvsolutions.idm.core.api.domain.ConceptRoleRequestOperation;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

// get request ID from event
def requestId = entityEvent.content.id;

// transform date
DateTimeFormatter dateFormat = DateTimeFormat.forPattern("dd. MM. yyyy HH:mm");
def from = dateFormat.print(entityEvent.content.created);

// gather all information about roles for send notification
ConceptRoleRequestFilter conceptFilter = new ConceptRoleRequestFilter();
conceptFilter.setRoleRequestId(requestId);


conceptFilter.setOperation(ConceptRoleRequestOperation.ADD);
def addedRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

conceptFilter.setOperation(ConceptRoleRequestOperation.UPDATE);
def changedRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

conceptFilter.setOperation(ConceptRoleRequestOperation.REMOVE);
def removedRoles = conceptRoleRequestService.findDto(conceptFilter, null).getContent();

def applicantUsername = execution.getVariable("applicantUsername");
          def identity = identityService.getDtoByUsername(applicantUsername);

// send notification
notificationManager.send(
	CoreModuleDescriptor.CHANGE_IDENTITY_ROLES,
          new IdmMessageDto.Builder()
		.setLevel(NotificationLevel.SUCCESS)
		.addParameter("addedRoles", addedRoles)
		.addParameter("changedRoles", changedRoles)
		.addParameter("removedRoles", removedRoles)
		.addParameter("identity", identity)
		.addParameter("from", from)
	.build(),
	identity
);</script>
    </scriptTask>
    <sequenceFlow id="flow46" sourceRef="scripttask8" targetRef="endevent1"></sequenceFlow>
    <scriptTask id="scripttask9" name="Send notification with result (Disapproved)" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.notification.api.dto.IdmMessageDto;
import eu.bcvsolutions.idm.core.CoreModuleDescriptor;
import eu.bcvsolutions.idm.core.notification.api.domain.NotificationLevel;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

// get request ID from event
def requestId = entityEvent.content.id;

// get url of application
def url = configurationService.getValue("idm.pub.security.allowed-origins");
// TODO: move higher
if (url != null) {
	url = url.split(",")[0] + "/#/workflow/history/processes/" + execution.getVariable("processInstanceId");
}

def applicantUsername = execution.getVariable("applicantUsername");
def identity = identityService.getDtoByUsername(applicantUsername);

// transform date
DateTimeFormatter dateFormat = DateTimeFormat.forPattern("dd. MM. yyyy HH:mm");
def from = dateFormat.print(entityEvent.content.created);

def managerDescription = execution.getVariable("managerDescription");
if (managerDescription == null || managerDescription.isEmpty()) {
	managerDescription = "";
}

// send notification
notificationManager.send(
	CoreModuleDescriptor.DISAPPROVE_IDENTITY_ROLES,
	new IdmMessageDto.Builder()
		.setLevel(NotificationLevel.SUCCESS)
		.addParameter("managerDescription", managerDescription)
		.addParameter("url", url)
		.addParameter("from", from)
	.build(),
	identity
);</script>
    </scriptTask>
    <endEvent id="endByManager" name="End"></endEvent>
    <sequenceFlow id="flow48" sourceRef="scripttask9" targetRef="endByManager"></sequenceFlow>
    <scriptTask id="scripttask10" name="Send notification with result (Return)" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.notification.api.dto.IdmMessageDto;
import eu.bcvsolutions.idm.core.CoreModuleDescriptor;
import eu.bcvsolutions.idm.core.notification.api.domain.NotificationLevel;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

// get request ID from event
def requestId = entityEvent.content.id;

// get url of application
def url = configurationService.getValue("idm.pub.security.allowed-origins");
// TODO: move higher
if (url != null) {
	url = url.split(",")[0] + "/#/workflow/history/processes/" + execution.getVariable("processInstanceId");
}

def applicantUsername = execution.getVariable("applicantUsername");
def identity = identityService.getDtoByUsername(applicantUsername);

// transform date
DateTimeFormatter dateFormat = DateTimeFormat.forPattern("dd. MM. yyyy HH:mm");
def from = dateFormat.print(entityEvent.content.created);

def managerDescription = execution.getVariable("managerDescription");
if (managerDescription == null || managerDescription.isEmpty()) {
	managerDescription = "";
}

// send notification
notificationManager.send(
	CoreModuleDescriptor.RETURN_REQUEST_IDENTITY_ROLES,
	new IdmMessageDto.Builder()
		.setLevel(NotificationLevel.SUCCESS)
		.addParameter("managerDescription", managerDescription)
		.addParameter("url", url)
		.addParameter("from", from)
	.build(),
	identity
);</script>
    </scriptTask>
    <sequenceFlow id="flow49" sourceRef="scripttask10" targetRef="sid-9E6516EF-3FDE-4191-8134-33DEB6D7C507"></sequenceFlow>
    <scriptTask id="scripttask11" name="Send notification with result (Return)" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.notification.api.dto.IdmMessageDto;
import eu.bcvsolutions.idm.core.CoreModuleDescriptor;
import eu.bcvsolutions.idm.core.notification.api.domain.NotificationLevel;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

// get request ID from event
def requestId = entityEvent.content.id;

// get url of application
def url = configurationService.getValue("idm.pub.security.allowed-origins");
// TODO: move higher
if (url != null) {
	url = url.split(",")[0] + "/#/workflow/history/processes/" + execution.getVariable("processInstanceId");
}

def applicantUsername = execution.getVariable("applicantUsername");
def identity = identityService.getDtoByUsername(applicantUsername);

// transform date
DateTimeFormatter dateFormat = DateTimeFormat.forPattern("dd. MM. yyyy HH:mm");
def from = dateFormat.print(entityEvent.content.created);

def managerDescription = execution.getVariable("managerDescription");
if (managerDescription == null || managerDescription.isEmpty()) {
	managerDescription = "";
}

// send notification
notificationManager.send(
	CoreModuleDescriptor.RETURN_REQUEST_IDENTITY_ROLES,
	new IdmMessageDto.Builder()
		.setLevel(NotificationLevel.SUCCESS)
		.addParameter("managerDescription", managerDescription)
		.addParameter("url", url)
		.addParameter("from", from)
	.build(),
	identity
);</script>
    </scriptTask>
    <sequenceFlow id="flow50" sourceRef="scripttask11" targetRef="sid-12381137-9285-460E-8CCD-BC43D5679026"></sequenceFlow>
    <scriptTask id="scripttask12" name="Send notification with result (Return)" scriptFormat="groovy" activiti:autoStoreVariables="false">
      <script>import eu.bcvsolutions.idm.core.notification.api.dto.IdmMessageDto;
import eu.bcvsolutions.idm.core.CoreModuleDescriptor;
import eu.bcvsolutions.idm.core.notification.api.domain.NotificationLevel;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;

// get request ID from event
def requestId = entityEvent.content.id;

// get url of application
def url = configurationService.getValue("idm.pub.security.allowed-origins");
// TODO: move higher
if (url != null) {
	url = url.split(",")[0] + "/#/workflow/history/processes/" + execution.getVariable("processInstanceId");
}

def applicantUsername = execution.getVariable("applicantUsername");
def identity = identityService.getDtoByUsername(applicantUsername);

// transform date
DateTimeFormatter dateFormat = DateTimeFormat.forPattern("dd. MM. yyyy HH:mm");
def from = dateFormat.print(entityEvent.content.created);

def managerDescription = execution.getVariable("managerDescription");
if (managerDescription == null || managerDescription.isEmpty()) {
	managerDescription = "";
}

// send notification
notificationManager.send(
	CoreModuleDescriptor.RETURN_REQUEST_IDENTITY_ROLES,
	new IdmMessageDto.Builder()
		.setLevel(NotificationLevel.SUCCESS)
		.addParameter("managerDescription", managerDescription)
		.addParameter("url", url)
		.addParameter("from", from)
	.build(),
	identity
);</script>
    </scriptTask>
    <sequenceFlow id="flow51" sourceRef="scripttask12" targetRef="applicantReturnedTask"></sequenceFlow>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_approve-identity-change-permissions">
    <bpmndi:BPMNPlane bpmnElement="approve-identity-change-permissions" id="BPMNPlane_approve-identity-change-permissions">
      <bpmndi:BPMNShape bpmnElement="startevent1" id="BPMNShape_startevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="142.0" y="331.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway1" id="BPMNShape_exclusivegateway1">
        <omgdc:Bounds height="40.0" width="40.0" x="641.0" y="141.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="managerTask" id="BPMNShape_managerTask">
        <omgdc:Bounds height="67.0" width="144.0" x="589.0" y="317.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway2" id="BPMNShape_exclusivegateway2">
        <omgdc:Bounds height="40.0" width="40.0" x="798.0" y="330.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endByApplicant" id="BPMNShape_endByApplicant">
        <omgdc:Bounds height="35.0" width="35.0" x="1.0" y="24.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="applicantReturnedTask" id="BPMNShape_applicantReturnedTask">
        <omgdc:Bounds height="71.0" width="130.0" x="754.0" y="126.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startAddSubWorkflow" id="BPMNShape_startAddSubWorkflow">
        <omgdc:Bounds height="96.0" width="201.0" x="2475.0" y="306.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask1" id="BPMNShape_scripttask1">
        <omgdc:Bounds height="80.0" width="169.0" x="2239.0" y="316.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="servicetaskCreateProcessName" id="BPMNShape_servicetaskCreateProcessName">
        <omgdc:Bounds height="87.0" width="105.0" x="222.0" y="305.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask2" id="BPMNShape_scripttask2">
        <omgdc:Bounds height="81.0" width="171.0" x="2238.0" y="178.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startChangeSubWorkflow" id="BPMNShape_startChangeSubWorkflow">
        <omgdc:Bounds height="86.0" width="201.0" x="2475.0" y="176.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="parallelgateway1" id="BPMNShape_parallelgateway1">
        <omgdc:Bounds height="40.0" width="40.0" x="2148.0" y="336.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="parallelgateway2" id="BPMNShape_parallelgateway2">
        <omgdc:Bounds height="40.0" width="40.0" x="2743.0" y="334.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="startRemoveSubWorkflow" id="BPMNShape_startRemoveSubWorkflow">
        <omgdc:Bounds height="79.0" width="201.0" x="2475.0" y="437.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask3" id="BPMNShape_scripttask3">
        <omgdc:Bounds height="70.0" width="155.0" x="2246.0" y="441.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="servicetaskRealization" id="BPMNShape_servicetaskRealization">
        <omgdc:Bounds height="91.0" width="171.0" x="2838.0" y="950.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endevent1" id="BPMNShape_endevent1">
        <omgdc:Bounds height="35.0" width="35.0" x="2906.0" y="1260.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask4" id="BPMNShape_scripttask4">
        <omgdc:Bounds height="71.0" width="163.0" x="2842.0" y="836.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501" id="BPMNShape_sid-02963C54-77A0-4E79-8EBD-4FBA5CCD4501">
        <omgdc:Bounds height="71.0" width="163.0" x="1283.0" y="540.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask5" id="BPMNShape_scripttask5">
        <omgdc:Bounds height="89.0" width="159.0" x="381.0" y="304.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4" id="BPMNShape_sid-7A6483E5-707A-40F9-A0A7-DFB32DE745A4">
        <omgdc:Bounds height="40.0" width="40.0" x="1188.0" y="143.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-69F3488F-4175-4C5F-A034-77C5B7A378C6" id="BPMNShape_sid-69F3488F-4175-4C5F-A034-77C5B7A378C6">
        <omgdc:Bounds height="67.0" width="144.0" x="1136.0" y="319.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-CB31E93D-4436-474F-B565-D990B2AC1E64" id="BPMNShape_sid-CB31E93D-4436-474F-B565-D990B2AC1E64">
        <omgdc:Bounds height="40.0" width="40.0" x="1345.0" y="332.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-9E6516EF-3FDE-4191-8134-33DEB6D7C507" id="BPMNShape_sid-9E6516EF-3FDE-4191-8134-33DEB6D7C507">
        <omgdc:Bounds height="71.0" width="130.0" x="1301.0" y="128.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-8554081E-2846-412C-A612-0F532ADABEDA" id="BPMNShape_sid-8554081E-2846-412C-A612-0F532ADABEDA">
        <omgdc:Bounds height="89.0" width="159.0" x="928.0" y="306.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E" id="BPMNShape_sid-17EC3714-6324-4F6C-8BCB-8950E3D2911E">
        <omgdc:Bounds height="40.0" width="40.0" x="1738.0" y="94.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-44411063-064E-4897-9B31-A9D29DE8DB3C" id="BPMNShape_sid-44411063-064E-4897-9B31-A9D29DE8DB3C">
        <omgdc:Bounds height="67.0" width="144.0" x="1687.0" y="322.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471" id="BPMNShape_sid-5BBC5295-B11C-4FF1-AF93-B26B087B3471">
        <omgdc:Bounds height="40.0" width="40.0" x="1896.0" y="335.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-12381137-9285-460E-8CCD-BC43D5679026" id="BPMNShape_sid-12381137-9285-460E-8CCD-BC43D5679026">
        <omgdc:Bounds height="71.0" width="130.0" x="1852.0" y="79.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="sid-3BE56C1C-CC6A-4DD2-AC41-AFCF1A6EC43E" id="BPMNShape_sid-3BE56C1C-CC6A-4DD2-AC41-AFCF1A6EC43E">
        <omgdc:Bounds height="89.0" width="159.0" x="1479.0" y="309.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask6" id="BPMNShape_scripttask6">
        <omgdc:Bounds height="76.0" width="161.0" x="500.0" y="4.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="servicetask1" id="BPMNShape_servicetask1">
        <omgdc:Bounds height="81.0" width="151.0" x="103.0" y="1.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="usertask1" id="BPMNShape_usertask1">
        <omgdc:Bounds height="67.0" width="144.0" x="2852.0" y="636.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask7" id="BPMNShape_scripttask7">
        <omgdc:Bounds height="89.0" width="159.0" x="2844.0" y="497.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="exclusivegateway3" id="BPMNShape_exclusivegateway3">
        <omgdc:Bounds height="40.0" width="40.0" x="2903.0" y="746.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask8" id="BPMNShape_scripttask8">
        <omgdc:Bounds height="81.0" width="167.0" x="2840.0" y="1110.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask9" id="BPMNShape_scripttask9">
        <omgdc:Bounds height="81.0" width="167.0" x="1279.0" y="664.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="endByManager" id="BPMNShape_endByManager">
        <omgdc:Bounds height="35.0" width="35.0" x="1345.0" y="810.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask10" id="BPMNShape_scripttask10">
        <omgdc:Bounds height="81.0" width="167.0" x="1282.0" y="226.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask11" id="BPMNShape_scripttask11">
        <omgdc:Bounds height="81.0" width="167.0" x="1833.0" y="226.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape bpmnElement="scripttask12" id="BPMNShape_scripttask12">
        <omgdc:Bounds height="81.0" width="167.0" x="735.0" y="226.0"></omgdc:Bounds>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge bpmnElement="flow13" id="BPMNEdge_flow13">
        <omgdi:waypoint x="818.0" y="330.0"></omgdi:waypoint>
        <omgdi:waypoint x="818.0" y="307.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow15" id="BPMNEdge_flow15">
        <omgdi:waypoint x="754.0" y="161.0"></omgdi:waypoint>
        <omgdi:waypoint x="681.0" y="161.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow17" id="BPMNEdge_flow17">
        <omgdi:waypoint x="2676.0" y="354.0"></omgdi:waypoint>
        <omgdi:waypoint x="2743.0" y="354.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow19" id="BPMNEdge_flow19">
        <omgdi:waypoint x="733.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="798.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow21" id="BPMNEdge_flow21">
        <omgdi:waypoint x="2408.0" y="356.0"></omgdi:waypoint>
        <omgdi:waypoint x="2475.0" y="354.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow23" id="BPMNEdge_flow23">
        <omgdi:waypoint x="177.0" y="348.0"></omgdi:waypoint>
        <omgdi:waypoint x="222.0" y="348.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow24" id="BPMNEdge_flow24">
        <omgdi:waypoint x="2168.0" y="336.0"></omgdi:waypoint>
        <omgdi:waypoint x="2168.0" y="219.0"></omgdi:waypoint>
        <omgdi:waypoint x="2238.0" y="218.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow25" id="BPMNEdge_flow25">
        <omgdi:waypoint x="2409.0" y="218.0"></omgdi:waypoint>
        <omgdi:waypoint x="2475.0" y="219.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow26" id="BPMNEdge_flow26">
        <omgdi:waypoint x="2188.0" y="356.0"></omgdi:waypoint>
        <omgdi:waypoint x="2239.0" y="356.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow28" id="BPMNEdge_flow28">
        <omgdi:waypoint x="2676.0" y="219.0"></omgdi:waypoint>
        <omgdi:waypoint x="2763.0" y="219.0"></omgdi:waypoint>
        <omgdi:waypoint x="2763.0" y="334.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow29" id="BPMNEdge_flow29">
        <omgdi:waypoint x="2401.0" y="476.0"></omgdi:waypoint>
        <omgdi:waypoint x="2475.0" y="476.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow30" id="BPMNEdge_flow30">
        <omgdi:waypoint x="2168.0" y="376.0"></omgdi:waypoint>
        <omgdi:waypoint x="2168.0" y="476.0"></omgdi:waypoint>
        <omgdi:waypoint x="2246.0" y="476.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow31" id="BPMNEdge_flow31">
        <omgdi:waypoint x="2676.0" y="476.0"></omgdi:waypoint>
        <omgdi:waypoint x="2763.0" y="477.0"></omgdi:waypoint>
        <omgdi:waypoint x="2763.0" y="374.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow33" id="BPMNEdge_flow33">
        <omgdi:waypoint x="327.0" y="348.0"></omgdi:waypoint>
        <omgdi:waypoint x="381.0" y="348.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow34" id="BPMNEdge_flow34">
        <omgdi:waypoint x="661.0" y="181.0"></omgdi:waypoint>
        <omgdi:waypoint x="661.0" y="317.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow35" id="BPMNEdge_flow35">
        <omgdi:waypoint x="2923.0" y="1041.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="1110.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow36" id="BPMNEdge_flow36">
        <omgdi:waypoint x="2923.0" y="907.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="950.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow37" id="BPMNEdge_flow37">
        <omgdi:waypoint x="2783.0" y="354.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="354.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="497.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow38" id="BPMNEdge_flow38">
        <omgdi:waypoint x="540.0" y="348.0"></omgdi:waypoint>
        <omgdi:waypoint x="589.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-F6CF4663-29E1-49FB-AD56-EFDE0ECCB694" id="BPMNEdge_sid-F6CF4663-29E1-49FB-AD56-EFDE0ECCB694">
        <omgdi:waypoint x="1365.0" y="332.0"></omgdi:waypoint>
        <omgdi:waypoint x="1365.0" y="307.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-503B495E-9455-44B9-8789-19E5D35765A9" id="BPMNEdge_sid-503B495E-9455-44B9-8789-19E5D35765A9">
        <omgdi:waypoint x="1301.0" y="163.0"></omgdi:waypoint>
        <omgdi:waypoint x="1228.0" y="163.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-4F213EDC-31DA-4044-87CC-A6DD1247E93C" id="BPMNEdge_sid-4F213EDC-31DA-4044-87CC-A6DD1247E93C">
        <omgdi:waypoint x="1208.0" y="183.0"></omgdi:waypoint>
        <omgdi:waypoint x="1208.0" y="319.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-044DD704-22AD-434D-B42E-DEDAE03BF3CC" id="BPMNEdge_sid-044DD704-22AD-434D-B42E-DEDAE03BF3CC">
        <omgdi:waypoint x="1087.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="1136.0" y="352.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-F12630E1-8728-4CCA-8E25-79A44942BD14" id="BPMNEdge_sid-F12630E1-8728-4CCA-8E25-79A44942BD14">
        <omgdi:waypoint x="1916.0" y="335.0"></omgdi:waypoint>
        <omgdi:waypoint x="1916.0" y="307.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-0311903F-711C-4751-81EB-814842E975FD" id="BPMNEdge_sid-0311903F-711C-4751-81EB-814842E975FD">
        <omgdi:waypoint x="1852.0" y="114.0"></omgdi:waypoint>
        <omgdi:waypoint x="1778.0" y="114.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-585E396A-7CD3-4EEB-A11D-E70EFEBC36FA" id="BPMNEdge_sid-585E396A-7CD3-4EEB-A11D-E70EFEBC36FA">
        <omgdi:waypoint x="1831.0" y="355.0"></omgdi:waypoint>
        <omgdi:waypoint x="1896.0" y="355.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-2CD6BB31-9D9C-4039-B5A8-29F3E0252145" id="BPMNEdge_sid-2CD6BB31-9D9C-4039-B5A8-29F3E0252145">
        <omgdi:waypoint x="1758.0" y="134.0"></omgdi:waypoint>
        <omgdi:waypoint x="1759.0" y="322.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-DC0D03B6-CF3F-4073-8044-0CE01CBB7DB5" id="BPMNEdge_sid-DC0D03B6-CF3F-4073-8044-0CE01CBB7DB5">
        <omgdi:waypoint x="1638.0" y="353.0"></omgdi:waypoint>
        <omgdi:waypoint x="1687.0" y="355.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-A8901EF0-CE52-4DBA-B810-4E4E1964E8BA" id="BPMNEdge_sid-A8901EF0-CE52-4DBA-B810-4E4E1964E8BA">
        <omgdi:waypoint x="1280.0" y="352.0"></omgdi:waypoint>
        <omgdi:waypoint x="1345.0" y="352.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-97770AD6-3F73-4833-B2EE-918194BBA074" id="BPMNEdge_sid-97770AD6-3F73-4833-B2EE-918194BBA074">
        <omgdi:waypoint x="1385.0" y="352.0"></omgdi:waypoint>
        <omgdi:waypoint x="1479.0" y="353.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-62F032AA-0D66-4AC4-9A9E-EC0276A2EEB3" id="BPMNEdge_sid-62F032AA-0D66-4AC4-9A9E-EC0276A2EEB3">
        <omgdi:waypoint x="1936.0" y="355.0"></omgdi:waypoint>
        <omgdi:waypoint x="2148.0" y="356.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow10" id="BPMNEdge_flow10">
        <omgdi:waypoint x="661.0" y="141.0"></omgdi:waypoint>
        <omgdi:waypoint x="580.0" y="80.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-0F52F310-CE09-4765-8108-7EC9E01F471F" id="BPMNEdge_sid-0F52F310-CE09-4765-8108-7EC9E01F471F">
        <omgdi:waypoint x="1208.0" y="143.0"></omgdi:waypoint>
        <omgdi:waypoint x="1208.0" y="112.0"></omgdi:waypoint>
        <omgdi:waypoint x="713.0" y="112.0"></omgdi:waypoint>
        <omgdi:waypoint x="580.0" y="80.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-1EA1C0C6-CBF9-4951-AFF5-853485FCCE0A" id="BPMNEdge_sid-1EA1C0C6-CBF9-4951-AFF5-853485FCCE0A">
        <omgdi:waypoint x="1758.0" y="94.0"></omgdi:waypoint>
        <omgdi:waypoint x="1759.0" y="77.0"></omgdi:waypoint>
        <omgdi:waypoint x="836.0" y="77.0"></omgdi:waypoint>
        <omgdi:waypoint x="661.0" y="42.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow20" id="BPMNEdge_flow20">
        <omgdi:waypoint x="838.0" y="350.0"></omgdi:waypoint>
        <omgdi:waypoint x="928.0" y="350.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow8" id="BPMNEdge_flow8">
        <omgdi:waypoint x="818.0" y="370.0"></omgdi:waypoint>
        <omgdi:waypoint x="818.0" y="574.0"></omgdi:waypoint>
        <omgdi:waypoint x="1283.0" y="575.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-1904D1CD-F8B5-4866-87A1-252CDD40546C" id="BPMNEdge_sid-1904D1CD-F8B5-4866-87A1-252CDD40546C">
        <omgdi:waypoint x="1365.0" y="372.0"></omgdi:waypoint>
        <omgdi:waypoint x="1364.0" y="540.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="sid-D1AA78F2-3EF5-40BA-8DF8-B0BEADF3C7C9" id="BPMNEdge_sid-D1AA78F2-3EF5-40BA-8DF8-B0BEADF3C7C9">
        <omgdi:waypoint x="1916.0" y="375.0"></omgdi:waypoint>
        <omgdi:waypoint x="1916.0" y="575.0"></omgdi:waypoint>
        <omgdi:waypoint x="1446.0" y="575.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow39" id="BPMNEdge_flow39">
        <omgdi:waypoint x="500.0" y="42.0"></omgdi:waypoint>
        <omgdi:waypoint x="254.0" y="41.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow40" id="BPMNEdge_flow40">
        <omgdi:waypoint x="103.0" y="41.0"></omgdi:waypoint>
        <omgdi:waypoint x="36.0" y="41.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow41" id="BPMNEdge_flow41">
        <omgdi:waypoint x="2923.0" y="586.0"></omgdi:waypoint>
        <omgdi:waypoint x="2924.0" y="636.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow42" id="BPMNEdge_flow42">
        <omgdi:waypoint x="2924.0" y="703.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="746.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow43" id="BPMNEdge_flow43">
        <omgdi:waypoint x="2923.0" y="786.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="836.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow44" id="BPMNEdge_flow44">
        <omgdi:waypoint x="2903.0" y="766.0"></omgdi:waypoint>
        <omgdi:waypoint x="1763.0" y="765.0"></omgdi:waypoint>
        <omgdi:waypoint x="1364.0" y="611.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow45" id="BPMNEdge_flow45">
        <omgdi:waypoint x="1364.0" y="611.0"></omgdi:waypoint>
        <omgdi:waypoint x="1362.0" y="664.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow46" id="BPMNEdge_flow46">
        <omgdi:waypoint x="2923.0" y="1191.0"></omgdi:waypoint>
        <omgdi:waypoint x="2923.0" y="1260.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow48" id="BPMNEdge_flow48">
        <omgdi:waypoint x="1362.0" y="745.0"></omgdi:waypoint>
        <omgdi:waypoint x="1362.0" y="810.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow49" id="BPMNEdge_flow49">
        <omgdi:waypoint x="1365.0" y="226.0"></omgdi:waypoint>
        <omgdi:waypoint x="1366.0" y="199.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow50" id="BPMNEdge_flow50">
        <omgdi:waypoint x="1916.0" y="226.0"></omgdi:waypoint>
        <omgdi:waypoint x="1917.0" y="150.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge bpmnElement="flow51" id="BPMNEdge_flow51">
        <omgdi:waypoint x="818.0" y="226.0"></omgdi:waypoint>
        <omgdi:waypoint x="819.0" y="197.0"></omgdi:waypoint>
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>