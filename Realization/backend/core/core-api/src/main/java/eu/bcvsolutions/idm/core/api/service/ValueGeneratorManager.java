package eu.bcvsolutions.idm.core.api.service;

import java.util.List;
import java.util.Set;

import eu.bcvsolutions.idm.core.api.domain.Generatable;
import eu.bcvsolutions.idm.core.api.domain.Identifiable;
import eu.bcvsolutions.idm.core.api.dto.AbstractDto;
import eu.bcvsolutions.idm.core.api.dto.GeneratorDefinitionDto;
import eu.bcvsolutions.idm.core.api.script.ScriptEnabled;

/**
 * Manager for generate values
 *
 * @author Ondrej Kopr <kopr@xyxy.cz>
 *
 */
public interface ValueGeneratorManager extends ScriptEnabled {

	/**
	 * Run generate process with given DTO. Values will be generated by sorted, active generators stored in DB.
	 *
	 * @param dto
	 * @return
	 */
	<E extends AbstractDto> E generate(E dto);

	/**
	 * Return all available generators for given entity type.
	 * If parameter entityType is null, return all generators.
	 *
	 * @param className
	 * @return
	 */
	List<GeneratorDefinitionDto> getAvailableGenerators(String entityType);
	
	/**
	 * Return all entities wich supports generate. Entity must implements
	 * interface {@link Generatable}
	 *
	 * @return
	 */
	Set<String> getSupportedEntityTypes();

	/**
	 * Supports given type
	 *
	 * @param entityType
	 * @return
	 */
	boolean supportsGenerating(Identifiable type);
}
