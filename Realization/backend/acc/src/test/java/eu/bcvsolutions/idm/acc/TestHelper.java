package eu.bcvsolutions.idm.acc;

import eu.bcvsolutions.idm.acc.dto.SysSystemMappingDto;
import eu.bcvsolutions.idm.acc.entity.SysRoleSystem;
import eu.bcvsolutions.idm.acc.entity.SysSystem;
import eu.bcvsolutions.idm.acc.entity.SysSystemMapping;
import eu.bcvsolutions.idm.acc.entity.TestResource;
import eu.bcvsolutions.idm.core.api.dto.IdmIdentityDto;
import eu.bcvsolutions.idm.core.api.dto.IdmIdentityRoleDto;
import eu.bcvsolutions.idm.core.model.entity.IdmRole;
import eu.bcvsolutions.idm.ic.service.api.IcConnectorFacade;

/**
 * TODO: Reuse core TestHelper after all core dto refactoring
 * 
 * @author Radek Tomi≈°ka
 *
 */
public interface TestHelper {
	
	static final String ATTRIBUTE_MAPPING_NAME = "__NAME__";
	static final String ATTRIBUTE_MAPPING_ENABLE = "__ENABLE__";
	static final String ATTRIBUTE_MAPPING_PASSWORD = IcConnectorFacade.PASSWORD_ATTRIBUTE_NAME;
	static final String ATTRIBUTE_MAPPING_FIRSTNAME = "FIRSTNAME";
	static final String ATTRIBUTE_MAPPING_LASTNAME = "LASTNAME";
	static final String ATTRIBUTE_MAPPING_EMAIL = "EMAIL";
	
	/**
	 * Creates test identity with random username
	 * 
	 * @return
	 */
	IdmIdentityDto createIdentity();
	
	/**
	 * Creates role with random name
	 * 
	 * @return
	 */
	IdmRole createRole();
	
	/**
	 * Creates assigned identity's role directly (without approving etc.)
	 * 
	 * @param identity
	 * @param role
	 * @return
	 */
	IdmIdentityRoleDto createIdentityRole(IdmIdentityDto identity, IdmRole role);
	
	/**
	 * Prepares conntector and system for fiven table name.
	 * Test database is used. 
	 * Generated system name will be used.
	 * 
	 * @param tableName see {@link TestResource#TABLE_NAME}
	 * @return
	 */
	SysSystem createSystem(String tableName);
	
	/**
	 * Prepares conntector and system for fiven table name.
	 * Test database is used. 
	 * 
	 * @param tableName see {@link TestResource#TABLE_NAME}
	 * @param systemName
	 * @return
	 */
	SysSystem createSystem(String tableName, String systemName);
	
	/**
	 * Creates system for {@link TestResource} with schema generated by given table.
	 * Test database is used.
	 * Generated system name will be used.
	 * 
	 * @see TestResource#TABLE_NAME
	 * @param withMapping default mapping will be included
	 * @return
	 */
	SysSystem createTestResourceSystem(boolean withMapping);
	
	/**
	 * Creates system for {@link TestResource} with schema generated by given table.
	 * Test database is used.
	 * 
	 * see TestResource#TABLE_NAME
	 * @param withMapping default mapping will be included
	 * @param systemName
	 * @return
	 */
	SysSystem createTestResourceSystem(boolean withMapping, String systemName);
	
	/**
	 * Returns default mapping - provisioning, identity
	 * 
	 * @see #createSystem(String, boolean)
	 * @param system
	 * @return
	 */
	SysSystemMappingDto getDefaultMapping(SysSystem system);
	
	/**
	 * Assing system to given role with default mapping (provisioning, identity)
	 * 
	 * @see #getDefaultMapping(SysSystem)
	 * @param role
	 * @param system
	 * @return
	 */
	SysRoleSystem createRoleSystem(IdmRole role, SysSystem system);
	
	/**
	 * Find account on target system
	 * 
	 * @param uid
	 * @return
	 */
	TestResource findResource(String uid);
}
