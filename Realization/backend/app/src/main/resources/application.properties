# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
## active spring profile
spring.profiles.active=${spring.profiles.active}
# spring.resources.add-mappings=false
#
## jpa
spring.jpa.show-sql=false
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_a
spring.jpa.properties.org.hibernate.envers.global_with_modified_flag=true
spring.jpa.properties.org.hibernate.envers.modified_flag_suffix=_m
spring.jpa.properties.hibernate.ejb.interceptor=eu.bcvsolutions.idm.core.model.repository.listener.AuditableInterceptor
spring.jpa.properties.hibernate.listeners.envers.autoRegister=true
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes=true
#
## Spring Data Rest basic configuration
# http://docs.spring.io/spring-data/rest/docs/current/reference/html/#_changing_other_spring_data_rest_properties
spring.data.rest.returnBodyOnCreate=true
spring.data.rest.returnBodyOnupdate=true
spring.data.rest.defaultPageSize=10
#
## Enable the default error page displayed in browsers in case of a server error.
server.error.whitelabel.enabled=true
#
## keep the main thread blocked so that Camel stays up
camel.springboot.main-run-controller=true
#
## Enable flyway migrations. 
# - https://proj.bcvsolutions.eu/ngidm/doku.php?id=navrh:databazove_scripty
flyway.enabled=false
#
## Enable scheduler
scheduler.enabled=true
scheduler.properties.location=/quartz-default.properties
scheduler.task.queue.process=60000
#
## String boot properties for Activiti workflow engine
# https://github.com/Activiti/Activiti/blob/master/modules/activiti-spring-boot/spring-boot-starters/activiti-spring-boot-starter-basic/src/main/java/org/activiti/spring/boot/ActivitiProperties.java
spring.activiti.databaseSchemaUpdate=true
# disable automatic jpa entities persisting
spring.activiti.jpaEnabled=false
# Automatic process deployment
spring.activiti.checkProcessDefinitions=true
spring.activiti.processDefinitionLocationPrefix=classpath*:eu/bcvsolutions/idm/workflow/
spring.activiti.processDefinitionLocationSuffixes=**/**.bpmn20.xml
#
## Check that the templates location exists is disabled not
spring.velocity.checkTemplateLocation=false
spring.velocity.resourceLoaderPath=classpath*:eu/bcvsolutions/idm/templates/
#
## Swagger config
# enable swagger endpoint (can be disabled for development etc.)
springfox.documentation.swagger.enabled=true
# endpoint with exposed documentations. Documentations are exposed by module e.g. <server>/api/doc?group=core
springfox.documentation.swagger.v2.path=/api/doc
#
# Cipher secret key for crypt values in confidential storage
# for crypt values is used secretKey or secretKey defined by file - secretKeyPath
# Can be empty => confidential storage will not be crypted, application cannot be used in production (dev, test only).
cipher.crypt.secret.key=
# cipher.crypt.secret.keyPath=/path/to/key
#
# use cglib for proxies by default
spring.aop.proxy-target-class=true
#
# allowed origins for FE
idm.pub.security.allowed-origins=http://localhost:3000,http://localhost
# auth token
# - expiration in mils
idm.sec.security.jwt.expirationTimeout=6000000
# - secret jwt password
idm.sec.security.jwt.secret.token=idmSecret
# ID system against which to authenticate
idm.sec.security.auth.systemId=
# extend JWT token expiration period on each successful request
idm.sec.security.jwt.token.extend.expiration=true

#
## Emailer
# enable test mode - in this mode, emails are not send
idm.sec.core.emailer.test.enabled=true
idm.sec.core.emailer.protocol=smtp
idm.sec.core.emailer.host=localhost
idm.sec.core.emailer.port=25
idm.sec.core.emailer.username=
idm.sec.core.emailer.password=
idm.sec.core.emailer.from=
#
# Application stage 
idm.pub.app.stage=
# Application instance / server id
idm.pub.app.instanceId=idm-primary
# Enable forest index for tree structures
idm.sec.app.forest.index.enabled=true
# create demo data at application start
idm.sec.core.demo.data.enabled=false
#
# supports delete identity
idm.pub.core.identity.delete=true
#
# default password change type for custom users, one of values: 
# DISABLED - password change is disable
# ALL_ONLY - users can change passwords only for all accounts
# CUSTOM - users can choose for which accounts change password
idm.pub.core.identity.passwordChange=ALL_ONLY
#
# required old password for change password
idm.pub.core.identity.passwordChange.requireOldPassword=true
#
# create default identity's contract, when identity is created
idm.pub.core.identity.create.defaultContract.enabled=true
#
# Properties for load template from templates folders by modules
idm.sec.core.notification.template.folder=classpath*:/eu/bcvsolutions/idm/templates/
idm.sec.core.notification.template.fileSuffix=**/**.xml
#
# Properties for load script from folders by module
idm.sec.core.script.folder=classpath*:/eu/bcvsolutions/idm/scripts/
idm.sec.core.script.fileSuffix=**/**.xml
#
# ID system against which to authenticate
# idm.sec.security.auth.systemId=
#
#
# processors
idm.sec.core.processor.role-tree-node-create-approve-processor.enabled=true
idm.sec.core.processor.role-tree-node-create-approve-processor.wf=approve-create-automatic-role
idm.sec.core.processor.role-tree-node-delete-approve-processor.enabled=true
idm.sec.core.processor.role-tree-node-delete-approve-processor.wf=approve-delete-automatic-role
#
#
## identity filters
## managers by standard tree structure (manager will be found by contract on parent node)
idm.sec.core.filter.IdmIdentity.managersFor.impl=defaultManagersFilter
## managers by relation in eav attribute (manager will be found by code in eav on parent node)
# idm.sec.core.filter.IdmIdentity.managersFor.impl=eavCodeManagersFilter
# extended form definition name
# idm.sec.core.filter.IdmIdentity.managersFor.formDefinition=default
# extended attribute name - value contains superior node code
# idm.sec.core.filter.IdmIdentity.managersFor.formAttribute=parentCode
#
## subordinates by standard tree structure (manager will be found by contract on parent node)
idm.sec.core.filter.IdmIdentity.subordinatesFor.impl=defaultSubordinatesFilter
## subordinates by relation in eav attribute (subordinates will be found by code in eav on parent node)
# idm.sec.core.filter.IdmIdentity.subordinatesFor.impl=eavCodeSubordinatesFilter
# extended form definition name
# idm.sec.core.filter.IdmIdentity.subordinatesFor.formDefinition=default
# extended attribute name - value contains superior node code
# idm.sec.core.filter.IdmIdentity.subordinatesFor.formAttribute=parentCode
#
#
## WF
# Global property that allow disable or enable sending notification from WF
idm.sec.core.wf.notification.send=false
# Approve by manager
idm.sec.core.wf.approval.manager.enabled=false
# Approve by security department
idm.sec.core.wf.approval.security.enabled=false
idm.sec.core.wf.approval.security.role=Security
# Approve by helpdesk department
idm.sec.core.wf.approval.helpdesk.enabled=false
idm.sec.core.wf.approval.helpdesk.role=Helpdesk
# Approve by usermanager department
idm.sec.core.wf.approval.usermanager.enabled=false
idm.sec.core.wf.approval.usermanager.role=Usermanager
# Approval wf by role priority
idm.sec.core.wf.role.approval.1=approve-role-by-manager
idm.sec.core.wf.role.approval.2=approve-role-by-guarantee
idm.sec.core.wf.role.approval.3=approve-role-by-guarantee-security
# Approval wf for unassign role (one remove WF for whole application)
idm.sec.core.wf.role.approval.remove=approve-remove-role-by-manager
#
# Identity changed monitored fields - Check if defined fields on identity was changed. If yes, then send notification.
# Default is disabled
idm.sec.core.processor.identity-monitored-fields-processor.enabled=false
# Monitored fields on change (for Identity, extended attributes are not supported)
idm.sec.core.processor.identity-monitored-fields-processor.monitoredFields=firstName, lastName
# Notification will be send to all identities with this role
idm.sec.core.processor.identity-monitored-fields-processor.recipientsRole=superAdminRole
#
# configuration property for default backup 
# idm.sec.core.backups.default.folder.path=/tmp/backup
#
# Proxy for HTTP requests
# idm.sec.core.http.proxy=12.34.56.78:1234
#
## Attachment manager
# attachments will be stored under this path.
# new directories for attachment will be created in this folder (permissions has to be added)
# System.getProperty("user.home")/idm_data will be used if no path is given
# idm.sec.core.attachment.storagePath=/opt/data
# temporary files for attachment processing (e.g. temp files for download / upload)
# getStoragePath()/temp will be used if no path is given
# idm.sec.core.attachment.tempPath=/opt/data/temp
# temporary file time to live in milliseconds
# older temporary files will be purged, default 14 days
idm.sec.core.attachment.tempTtl=1209600000
