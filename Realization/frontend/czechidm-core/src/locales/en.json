{
  "app": {
    "name": "CzechIdM",
    "author": {
      "name": "BCV solutions s.r.o.",
      "homePage": "http://www.bcvsolutions.eu"
    },
    "helpdesk": "HelpDesk",
    "version": {
      "frontend": "Version",
      "backend": "Backend version",
      "releaseDate": "Release date"
    }
  },
  "format": {
    "date": "DD.MM.YYYY",
    "time": "HH:mm",
    "datetime": "DD.MM.YYYY HH:mm:ss",
    "times": "HH:mm:ss"
  },
  "message": {
    "success": {
      "common": "The operation completed successfully",
      "create": "Creation successfully completed",
      "update": "Updated successfully completed",
      "delete": "Deletion successfully completed"
    },
   "task": {
      "detailNotFound":"This task is not supported!"
    },
   "failed": "Operation failed",
    "notImplemented": "This operation is not available yet"
  },
  "label": {
    "id": "Id",
    "action": "Actions",
    "otherAttributes": "Other attributes",
    "selectAll": "Select / deselect all",
    "validFrom": "Valid from",
    "validTill": "Valid to",
    "select": "Select ...",
    "disabled": "Disabled",
    "property": "Attribute",
    "value": "Value"
  },
   "button": {
    "activate": "Activate",
    "add": "Add",
    "back": "Back",
    "cancel": "Cancel",
    "close": "Close",
    "apply": "Apply",
    "confirm": "Confirm",
    "create": "Create",
    "createContinue": "Created and edit",
    "createNew": "Created and add new",
    "deactivate": "Deactivate",
    "deactivatePrepare": "Preparing deactivation ...",
    "delete": "Delete",
    "detail": "Detail",
    "edit": "Edit",
    "filter": {
      "toogle": " Filter ",
      "use": "Filter",
      "cancel": "Cancel filter"
    },
    "logout": "Log Out",
    "no": "No",
    "send": "Send",
    "sending": "Sending",
    "save": "Save",
    "saveAndClose": "Save and exit",
    "saveAndContinue": "Save and continue",
    "saving": "Saving",
    "yes": "Yes",
    "set": "Set"
  },
  "action": {
    "delete": {
      "action": "Remove",
      "header_1": "Removing record",
      "header_2": "Removing records",
      "header_5": "$t(action.delete.header_2)",
      "message_1": "Do you want to remove selected record [<strong>{{record}}</strong>]?",
      "message_2": "Select records: [<strong>{{records}}</strong>].<br /><br />Do you want to remove <strong>{{count}}</strong> selected records?",
      "message_5": "Select records: [<strong>{{records}}</strong>].<br /><br /Do you want to remove <strong>{{count}}</strong> selected records?",
      "error": "An error occurred while removing [{{record}}].",
      "success_1": "Selected record [{{record}}] was successfully deleted",
      "success_2": "Selected records [{{records}}] were successfully deleted",
      "success_5": "Selected records [{{records}}] were successfully deleted"
    },

    "activate": {
      "action": "Activate",
      "header_0": "N/A",
      "header_1": "Activate record",
      "header_2": "Activate records",
      "header_5": "$t(action.activate.header_2)",
      "message_0": "N/A",
      "message_1": "Do you really want to remove selected record [<strong>{{record}}</strong>]?",
      "message_2": "Selected records: [<strong>{{records}}</strong>].<br /><br />Do you want to activate <strong>{{count}}</strong> vybrané záznamy?",
      "message_5": "Selected records: [<strong>{{records}}</strong>].<br /><br />Do you really want to activate <strong>{{count}}</strong> vybraných záznamů?",
      "error": "An error occurred while activating [{{record}}]",
      "success_0": "N/A",
      "success_1": "Selected record [{{record}}] were successfully activated",
      "success_2": "Selected records [{{records}}] were successfully activated",
      "success_5": "Selected records [{{records}}] were successfully activated"
    },
      "deactivate": {
      "action": "Deactivate",
      "header_0": "N/A",
      "header_1": "Deactivate record",
      "header_2": "Deactivate records",
      "header_5": "$t(action.deactivate.header_2)",
      "message_0": "N/A",
      "message_1": "Do you want to deactivate selected record [<strong>{{record}}</strong>]?",
      "message_2": "Selected records: [<strong>{{records}}</strong>].<br /><br />Do you want to deactivate <strong>{{count}}</strong> selected records?",
      "message_5": "Selected records: [<strong>{{records}}</strong>].<br /><br />Do you want to deactivate <strong>{{count}}</strong> selected records?",
      "error": "An error occurred while removing [{{record}}]",
      "success_0": "N/A",
      "success_1": "Selected record [{{record}}] were successfully deactivated",
      "success_2": "Selected records [{{records}}] were successfully deactivated",
      "success_5": "Selected records [{{records}}] were successfully deactivated"
    },
    "save": {
      "success_0": "N/A",
      "success_1": "Record [{{record}}] was successfully saved"
    }
  },
  "environment": {
    "development": {
      "short": "D",
      "label": "Development",
      "title": "Development environment"
    },
    "test": {
      "short": "T",
      "label": "Test",
      "title": "Test environment"
    }
  },
 "navigation" : {
    "toogle": "Toggle navigation",
    "menu": {
      "home": "Dashboard",
      "profile": {
        "label": "Profile",
        "title": "My profile"
      },
      "subordinates": {
        "label": "My subordinates",
        "title": "My subordinates"
      },
      "roles": {
        "label": "User roles",
        "title": "Assigned roles"
      },
      "tasks": {
        "label" : "Tasks",
        "title" : "My tasks"
      },
      "task" : "Task",
      "identities": {
        "label": "Users",
        "title": "List of users"
      },
      "messages": "Report a problem",
      "configuration": "Configuration",
      "userLabel": "{{entityId}}",
      "login": "$t(content.login.header)",
      "logout": "Log Out",
      "system": "Settings",
      "workflow": {
        "definitions": "Workflow definitions",
        "historicProcess": "Workflow history",
        "title": "Workflow"
      },
      "audit": {
        "profile": "Audit of user"
      },
      "separator": {
        "system": "System settings"
      },
      "notifications": {
        "label": "Notifications",
        "title": "Notifications"
      }
    }
  },
  "component" : {
    "basic": {
      "HelpIcon" : {
        "title": "Help"
      },
      "SelectBox" : {
        "noResultsText": "No result",
        "searchPromptText": "Start typing ...",
        "searchingText": "Searching ..."
      },
      "Table" : {
        "Pagination" : {
          "recordInfo": "<strong title='First record on page'>{{minRecord}}</strong> - <strong title='Last record on page'>{{maxRecord}}</strong> of <strong title='Total number of records'>{{totalRecords}}</strong> records",
          "size": "Number of records",
          "page": {
            "title": "Page",
            "select": "Go to page {{page}}"
          },
          "from": "of"
        },
        "noData": "No results found"
      },
      "ProgressBar": {
        "start": "Processing",
        "processed": "Processed"
      },
      "Dropzone": {
        "infoText": "Drag files here, or click to select files."
      },
      "TextField": {
        "confidential": {
          "edit": "Set new value"
        }
      }
    },
   "advanced": {
      "IdentityInfo": {
        "disabledInfo": "User is deactivated",
        "profileLink": "Show full detail"
      },
      "Filter": {
        "option": {
          "yes": "Yes",
          "no": "No"
        }
      },
      "Table": {
        "bulk-action": {
          "selection_empty": "Select records ...",
          "selection_0": "Select records ...",
          "selection_1": "Operation with selected record:",
          "selection_2": "Operation with selected records ({{count}}):",
          "selection_5": "Operation with selected records ({{count}}):",
          "notImplemented": "Sorry, this operation is not available yet."
        },
        "error": {
          "load": "When retrieving records to the table an error occurred"
        },
        "button": {
          "refresh": "Reload records"
        },
        "noData": "$t(component.basic.Table.noData)"
      },
      "Tree": {
        "loading": "Loading ..."
      },
      "EavForm": {
        "multiple": {
          "label": "multi",
          "title": "Supports entering multiple values. What value ~ a new line.",
          "unsupported": {
            "title": "{{name}} - attribute cannot be multiple",
            "formDefinition": {
              "title": "Form definition has to be fixed",
              "type": "Type",
              "name": "Name"
            }
          }
        },
        "persistentType": {
          "unsupported": {
            "title": "{{name}} - unsupported persistentType",
            "confidential": "{{name}} - confidential is not supported"
          }
        }
      }
    }
  },
   "enums" : {
    "ApiOperationTypeEnum" : {
      "CREATE" : "create",
      "UPDATE" : "edit",
      "GET" : "get",
      "DELETE" : "delete"
    },
    "RoleTypeEnum": {
      "SYSTEM": "System",
      "BUSINESS": "Business",
      "TECHNICAL": "Technical",
      "LOGIN": "Login"
    },
    "ScriptCategoryEnum": {
      "DEFAULT": "Standard",
      "TRANSFORM_FROM": "Transformation from",
      "TRANSFORM_TO": "Transformation to",
      "SYSTEM": "System"
    },
    "RoleAssignTypeEnum": {
      "UNASSIGNED": "not assigned",
      "WAIT_ASSIGN": "not assigned (waiting for assign)",
      "WAIT_APPROVE": "not assigned (waiting for aproval)",
      "ASSIGNED": "Assign",
      "FINITE_ASSIGNMENT": "Assign (with expiration)",
      "QUARANTINE": "Assign (in quarantene)",
      "WAIT_CHANGE_APPROVE": "Assign (update waiting for approval)",
      "WAIT_REMOVE_APPROVE": "Assign (removing waiting for approval)"
    },
    "OperationResultEnum": {
      "SUCCESS": "succes",
      "FAILED": "failed"
    },
    "OperationTypeEnum": {
      "ADD": "ADD",
      "APPROVE": "APPROVE",
      "CHANGE": "CHANGE",
      "CREATE": "CREATE",
      "DENY": "DENY",
      "DISABLE": "DISABLE",
      "ENABLE": "ENABLE",
      "MOVE": "MOVE",
      "REMOVE": "REMOVE",
      "RENAME": "RENAME",
      "SET": "SET",
      "UNLINK": "UNLINK",
      "UPDATE": "UPDATE",
      "WANT_ADD": "WANT_ADD"
    },
    "PersistentTypeEnum": {
      "CHAR": "Char",
      "TEXT": "Text",
      "TEXTAREA": "Textové field",
      "RICHTEXTAREA": "WYSIWYG editor",
      "INT": "Integer",
      "LONG": "Long",
      "DOUBLE": "Double",
      "CURRENCY": "Currency",
      "BOOLEAN": "Boolean",
      "DATE": "Date",
      "DATETIME": "Date + time",
      "BYTEARRAY": "Byte array"
    },
    "ObjectClassEnum": {
      "Identity": "Identity",
      "Role": "Role",
      "Organisation": "Organization",
      "Resource": "Resource",
      "WorkflowDefinition": "WorkflowDefinition"
    },
    "TaskStateEnum": {
      "APPROVED": "Approved",
      "DENIED": "Denied",
      "PENDING": "Waiting",
      "ESCALATED": "Escalated"
    },
    "DelegateStateEnum": {
      "PENDING": "Waiting for approval",
      "DENIED": "Denied",
      "APPROVED": "Approved"
    },
    "NotificationStateEnum": {
      "ALL": "Send",
      "PARTLY": "Partly",
      "NOT": "Unsent"
    },
    "AccessTypeEnum": {
      "DENY_ALL": "Access denied to all",
      "PERMIT_ALL": "Allowed access to all",
      "NOT_AUTHENTICATED": "Not authenticated",
      "IS_AUTHENTICATED": "Login required",
      "HAS_ANY_AUTHORITY": "At least one of the privileges",
      "HAS_ALL_AUTHORITIES": "Assigned all the permissions"
    },
    "AuditModificationEnum": {
      "ADD": "create",
      "MOD": "update",
      "DEL": "delete"
    },
    "PasswordPolicyTypeEnum": {
      "VALIDATE": "validation",
      "GENERATE": "generation"
    },
    "PasswordPolicyGenerateTypeEnum": {
      "RANDOM": "Random",
      "PASSPHRASE": "Passphrase"
    },
    "PasswordPolicyIdentityAttributeEnum": {
      "USERNAME": "User name",
      "LASTNAME": "Last name",
      "FIRSTNAME": "First Name",
      "EMAIL": "E-mail"
    },
    "NotificationLevelEnum": {
      "SUCCESS": "SUCCESS",
      "INFO": "INFO",
      "WARNING": "WARNING",
      "ERROR": "ERROR"
    },
   "OperationStateEnum":{
      "CREATED": "Created",
      "RUNNING": "Running",
    	"EXECUTED": "Executed",
    	"EXCEPTION": "Failed",
    	"NOT_EXECUTED": "Not executed",
    	"CANCELED": "Canceled"
    },
    "TriggerTypeEnum": {
      "SIMPLE": "One-time start",
      "CRON": "Cron"
    },
    "RolePriorityEnum": {
      "NONE": "None",
      "MINOR": "Minor",
      "MAJOR": "Major",
      "CRITICAL": "Critical",
      "TRIVIAL": "Trivial"
    },
    "RoleRequestStateEnum": {
      "CREATED": "Created",
      "CONCEPT": "Concept",
      "EXECUTED": "Executed",
      "CANCELED": "Canceled",
      "APPROVED": "Approved",
      "IN_PROGRESS": "In progress",
      "EXCEPTION": "Exception",
      "DUPLICATED": "Duplicated"
    },
    "ConceptRoleRequestStateEnum": {
      "ADD": "Add",
      "UPDATE": "Update",
      "REMOVE": "Remove"
    },
    "RecursionTypeEnum": {
      "NO": "Without recursion",
      "DOWN": "By structure down",
      "UP": "By structure up"
    }
  },
 "dashboard": {
    "profileDashboard" : {
      "header": "Your basic information",
      "goToProfil": "Go to profile"
    }
  },
  "permission": {
    "base" : {
      "ADMIN": "Administration",
      "READ": "Read",
      "WRITE": "Write",
      "DELETE": "Delete"
    },
    "group": {
      "APP": "App configuration",
      "AUDIT": "Audit",
      "CONFIGURATION": "Configuration (app)",
      "CONFIGURATIONSECURED": "Configuration (system)",
      "IDENTITY": "Users",
      "MODULE": "Modules",
      "NOTIFICATION": "Notifications",
      "ROLE": "Roles",
      "TREENODE": "Tree nodes",
      "TREETYPE": "Structure types",
      "SCRIPT": "Scripts"
    }
  },
  "content": {
    "error": {
      "401": {
        "title": "401",
        "description": "To access must be logged."
      },
      "403": {
        "title": "403",
        "description": "Insufficient access rights."
      },
      "404": {
        "title": "404",
        "description": "Page not found.",
        "record": "Record ID <strong>{{id}}</strong> does not exist."
      },
      "500": {
        "title": "Oups, this is embarasing"
      },
      "503": {
        "title": "503",
        "description": "The service is currently not available.",
        "note": "Please, try it later."
      }
    },
    "about": {
      "header": "About app",
      "title": "$t(content.about.header)",
      "sourceCodeOn": "Project source available at",
      "link": "$t(content.about.header)"
    },
    "login": {
      "header": "Log in",
      "title": "$t(content.login.header)",
      "username": "$t(entity.Identity.username)",
      "password": "Password",
      "admin": "Administrator",
      "button": {
        "login": "$t(content.login.header)",
        "passwordReset": "$t(content.password.reset.button.passwordReset)",
        "passwordChange": "$t(content.password.change.button.passwordChange)",
        "logout": {
          "value": "Logout",
          "title": "Log out completely and continue on new logging"
        }
      }
    },
    "logout": {
      "header": "Logout",
      "title": "$t(content.logout.header)",
      "message": {
        "logout": "Logout."
      }
    },
    "password": {
      "reset": {
        "header": "Password reset",
        "title": "Password reset",
        "username": "Enter your username",
        "token": {
          "label": "Verification code",
          "placeholder": "Verification code received via SMS"
        },
        "password": "New password",
        "passwordAgain": {
          "label": "Password again",
          "placeholder": "New password again"
        },
        "button": {
          "haveToken": "I have already received the verification code",
          "sendToken": "Send",
          "passwordReset": "Password reset"
        },
        "message": {
          "generateResetToken": {
            "info": "This form can be used to reset the password for your user identity. After sending you will receive a verification code that you can use to reset your password. The password can be reset only once every 24 hours. If you already have a valid verification code, press 'I have already received'",
            "success": "Verification code will be sent via SMS"
          },
          "passwordReset": {
            "info": "On your phone number verification code was sent. Now you can change the password to your user account. If you do not receive an SMS message to a few minutes, please contact technical support. For technical problems, contact support at the email address helpdesk@bcvsolutions.eu",
            "success": {
              "title": "Reset your password successfully changed",
              "message": "Your password was successfully changed on all your accounts"
            }
          }
        }
      },
      "change": {
        "header": "Change password",
        "title": "Change password",
        "passwordOld": "Old password",
        "password": "New password",
        "passwordChangeTooltip": "Password strength:",
        "passwordAgain": {
          "label": "Re-enter new password",
          "placeholder": "Password again"
        },
        "button": {
          "passwordChange": "Change password"
        },
        "message": {
          "passwordChange": {
            "info": "This form can be used to change the password for your user identity",
            "required": "Required to change password CzechIdM",
            "success": {
              "title": "Changing the password is OK",
              "message": "Your password was successfully changed on all your accounts."
            }
          },
          "passwordMustChange": {
            "success": {
              "title": "Changing the password is OK",
              "message": "Your CzechIdM password was successfully changed."
            }
          }
        }
      },
      "strength" : {
        "weak": "weak",
        "okay": "normal",
        "strong": "strong",
        "great": "perfect"
      }
    },
    "messages": {
      "header": "User history report",
      "title": "Messages",
      "empty": "No messages found.",
      "button": {
        "removeAll": "Remove all messages."
      }
    },
    "passwordPolicies": {
      "header": "Password policies",
      "title": "Password policies",
      "edit": {
        "header": "Password policy details",
        "title": "Password policy details"
      },
      "basic": {
        "header": "Configuration",
        "title": "Configuration"
      },
      "advanced": {
        "header": "Additional rules",
        "title": "Additional rules"
      },
      "characters": {
        "header": "Characters",
        "title": "Characters"
      },
      "create": {
        "title": "New configuration of password policies",
        "header": "New configuration of password policies"
      },
      "validation": {
        "maxLength": "Maximum allowable password length: {{0}}",
        "minLength": "Minimum password length: {{0}}",
        "minNumber": "Minimální počet číslic: {{0}}",
        "minUpperChar": "Minimum number of digits: {{0}}",
        "prohibited": "Password contains illegal characters: ",
        "minLowerChar": "Minimum number of lowercase characters: {{0}}",
        "minSpecialChar": "Minimum number of special characters: {{0}}",
        "policiesNames": "Password has not passed through these policies ",
        "minRulesToFulfillCount": "Unfulfilled minimum mandatory rules: ",
        "minRulesToFulfill": "Fill in at least {{count}} the following rules: ",
        "passwordSimilarUsername": "Heslo je příliš podobné uživatelskému jménu: ",
        "passwordSimilarEmail": "Password is too similar to a username: ",
        "passwordSimilarFirstName": "Password is too similar to a name: ",
        "passwordSimilarLastName": "Password is too similar surnames: ",
        "date": "Password can not be changed now, try again: "
      },
      "save": {
        "success": "Password policy [{{name}}] was successfully saved."
      }
    },
    "configuration": {
      "header": "Configuration",
      "title": "Configuration",
      "edit": {
        "header": "{{name}} <small>detail configuration items</small>"
      },
      "create": {
        "header": "New configuration items"
      },
      "save": {
        "success": "Configuration items [{{name}}] successfully saved"
      },
      "fromFile": "Application configuration from configuration files <small>application.properties</small>",
      "fromEnvironment": "Environment configuration <small>backend</small>",
      "guarded": "The values of configuration items containing key [<strong>{{guarded}}</strong>] The values of configuration items containing key will automatically set the secret and invisible. Values beginning with the prefix [<strong>idm.sec.</strong>] can not be visible.",
      "confidential": {
        "help": "The setting will be stored in an encrypted vault"
      },
      "secured": {
        "notAllowed": "You do not have permission to edit the system configuration",
        "help": "Public settings can be loaded without logging in. Secret settings can also be public."
      }
    },
    "tasks-summary": {
      "summary": "Tasks list",
      "approvalTasks": "Approved tasks",
      "filter": {
        "createdDateFrom": {
          "label": "Created from",
          "placeholder": "Created from"
        },
        "createdDateTill": {
          "label": "Created till",
          "placeholder": "Created till"
        },
        "closeDateFrom": {
          "label": "Closed by",
          "placeholder": "The task was finished by"
        },
        "closeDateTill": {
          "label": "Ended till",
          "placeholder": "The task was completed till"
        },
        "approvedBy": {
          "label": "Approver",
          "placeholder": "Who appoved the task"
        },
        "taskState": {
          "label": "State",
          "placeholder": "Task state"
        },
        "taskName": {
          "label": "Task name",
          "placeholder": "Task name"
        },
        "taskId": {
          "label": "ID",
          "placeholder": "Task id"
        },
        "note": {
          "label": "Note",
          "placeholder": "Task note"
        }
      }
    },
    "tasks-assigned": {
      "assigned": "Assigned tasks",
      "action": {
        "approve": {
          "action": "Approve tesk",
          "header_1": "Task to approve",
          "header_2": "Task to approve",
          "header_5": "$t(content.tasks-assigned.action.approve.header_2)",
          "message_1": "Do you really want to approve the selected task?",
          "message_2": "Do you really want to approve <strong>{{count}}</strong> the selected tasks?",
          "message_5": "Do you really want to approve <strong>{{count}}</strong> the selected tasks?",
          "error": "When approving the task {{task}} task error occurred.",
          "success_1": "The task was successfully approved",
          "success_2": "Tasks were successfully approved",
          "success_5": "$t(content.tasks-assigned.action.approve.success_2)"
        },
        "disapprove": {
          "action": "Reject",
          "header_1": "Rejection the task",
          "header_2": "rejection the task",
          "header_5": "$t(content.tasks-assigned.action.approve.header_2)",
          "message_1": "Do you really want to reject the selected task?",
          "message_2": "Do you really want to reject <strong>{{count}}</strong> the selected tasks?",
          "message_5": "Do you really want to reject <strong>{{count}}</strong> the selected tasks?",
          "error": "When rejecting the task {{task}} task error occurred",
          "success_1": "The task was successfully approved",
          "success_2": "Tasks were successfully approved",
          "success_5": "$t(content.tasks-assigned.action.approve.success_2)"
        }
      }
    },
    "task":{
        "instances": {
          "header": "Unresolved tasks",
          "title": "Unresolved tasks"
        },
        "instance": {
          "header": "Task details",
          "title": "Task details",
          "name": "Activity name",
          "description": "Task name",
          "createdDate": "Created on",
          "applicantFullName": "Applicant name",
          "applicant": "Requested for",
          "successComplete": "The task {{name}} was successfully solved.",
          "completeTaskConfirmTitle": "Confirmation of task completion",
          "completeTaskConfirmDetail": "o you really want this task to terminate?",
          "role": {
            "currentRoles": "Currently assigned permissions",
            "conceptIdentityRoles": "Applicants roles"
          }
        },
        "DefaultTaskDetail": {
          "applicant": "Requested for",
          "createdDate": "Created date",
          "approvers": "Approvers of this task",
          "note": "$t(entity.ApprovalTask.note)",
          "taskState": "$t(entity.ApprovalTask.taskState)",
          "approve": "Approve",
          "disapprove": "Reject",
          "approvers": "Approvers of this task",
          "messages": {
            "approved":"The task was successfully approved",
            "disapproved": "The task was successfully rejected",
            "confirmTaskApproveTitle": "Task approve confirmation",
            "confirmTaskApprove": "Do you really want this task to approve?",
            "confirmTaskDisapprove": "Do you really want this task to reject?",
            "confirmTaskDisapproveTitle": "Task reject confirmation"
          }
        },
        "RoleApprovalTaskDetail": {
          "roleName" : "Role name"
        },
        "IdentityRoleConceptTable": {
          "oldValue": "Old value {{oldValue}}",
          "oldValueNotExist": "Old value was empty",
          "create": {
            "header": "Add roles"
          },
          "edit": {
            "header": "Edit roles"
          },
          "action": {
            "deleteAdded": {
              "header": "Delete added roles",
              "message": "Do you really want to delete added roles?"
            },
            "deleteChanged": {
              "header": "Delete changed roles",
              "message": "Do you really want to delete changed roles?"
            },
            "deleteRemoved": {
              "header": "Delete removed roles",
              "message": "Do you really want to delete removed roles?"
            },
            "delete": {
              "header": "Delete roles",
              "message": "Do you really want to delete roles"
            }
          }
        }
    },
    "identities": {
      "header": "Users",
      "title": "Users",
      "filter": {
        "name": {
          "placeholder": "Username, surname, name, e-mail or note"
        },
        "organization": {
          "label": "Org. structure",
          "placeholder": "Element in organization structure"
        },
        "recursively": {
          "label": "Recursively",
          "placeholder": "Recursively by tree structure down"
        },
        "role": {
          "label": "Role",
          "placeholder": "Assigned role"
        }
      },
      "action": {
        "deactivate": {
          "action": "Deactivate",
          "header_1": "Deactivate user",
          "header_2": "Deactivate users",
          "header_5": "$t(content.identities.action.deactivate.header_2)",
          "message_1": "Do you really want to deactivate the selected user <strong>{{username}}</strong>?",
          "message_2": "Do you really want to deactivate <strong>{{count}}</strong> selected users?",
          "message_5": "$t(content.identities.action.deactivate.message_2)",
          "error": "When you deactivate a user {{username}} an error occurred",
          "success": "Selected users [{{usernames}}] are deactivated"
        },
        "activate": {
          "action": "Activate",
          "header_0": "N/A",
          "header_1": "User activation",
          "header_2": "Users activation",
          "header_5": "$t(content.identities.action.activate.header_2)",
          "message_1": "Do you really want to activate the selected user <strong>{{username}}</strong>?",
          "message_2": "Do you really want to activate <strong>{{count}}</strong> selected users?",
          "message_5": "$t(content.identities.action.activate.message_2)",
          "error": "When you activate a user {{username}} an error occurred",
          "success": "Selected users [{{usernames}}] are activated"
        },
        "reset": {
          "action": "Password reset"
        },
        "remove": {
          "action": "Remove"
        }
      }
    },
    "tree": {
      "header": "Organizational trees",
      "title": "Organizational trees",
      "filter": {
        "parentId": {
          "label": "Superior element"
        }
      },
      "typeNotFound": "Element not found.",
      "newType": "Please, continue creating a new element.",
      "typePick": "Select the element",
      "typePickPlaceHolder": "Select the element.",
      "nodes": {
        "header": "Structure elements",
        "title": "Structure elements",
        "addType": "Add element",
        "reloadTree": "Cancel the filter and reload the tree",
        "tab": {
          "identities": "Users",
          "nodes": "Structure elements"
        }
      },
      "node": {
        "detail": {
          "header": "Element details",
          "title": "Element details",
          "label": "Basic information",
          "edit": {
            "title": "Element details",
            "header": "{{name}} element details"
          },
          "create": {
            "header": "New element"
          },
          "save": {
            "success": "Element [{{name}}] was successfully saved"
          }
        },
        "eav": {
          "header": "More information",
          "title": "More information",
          "save": {
            "success": "Extended attributes for element [{{name}}] was successfully saved."
          },
          "error" : {
            "notFound": "Extended attributes definition for element not found."
          }
        },
        "roles": {
          "header": "Automatic roles",
          "title": "Automatic roles",
          "label": "Automatic roles",
          "edit": {
            "header": "{{name}} <small>automatic role detail</small>"
          },
          "create": {
            "header": "New automatic role"
          },
          "save": {
            "success": "Automatic role [{{record}}] was successfully saved"
          }
        }
      },
      "types": {
        "header": "Structure types",
        "title": "Structure types",
        "edit": "detail the type of structure",
        "create": "New type of tree structure",
        "save": {
          "success": "The type [{{name}}] was successfully saved."
        },
        "configuration": {
          "button": {
            "rebuild": "Reindex"
          },
          "action": {
            "rebuild" : {
              "header": "Reindex",
              "message": "Do you really want to rebuild index for tree type structure [{{record}}]",
              "success": "Rebuil index for tree type structure [{{record}}] was scheduled."
            }
          },
          "index": {
            "valid": "Tree type structure index is valid.",
            "invalid": "Tree type structure index is invalid. Index rebuild is needed. Search on invalid index will not return relevant results.",
            "rebuild": "Index rebuild is in progress <small>Tree nodes editation is not possible for now</small>"
          }
        }
      }
    },
    "rolesMenu": {
      "header": "Roles",
      "title": "Roles"
    },
    "roleCatalogues": {
      "header": "Role catalogs",
      "title": "Role catalogs",
      "edit": {
        "title": "Folder details",
        "header": "{{name}} folder details"
      },
      "create": {
        "header": "New folder",
        "title": "New folder"
      },
      "save": {
        "success": "The folder [{{name}}] was successfully saved to catalog roles."
      },
      "parentPick": "Select folder",
      "reloadTree": "Reload tree catalog roles",
      "addRoleCatalogue": "Add now folder",
      "filter": {
        "name": "Name",
        "namePlaceHolder": "Folder name",
        "parent": "Folder parent",
        "parentPlaceHolder": "Folder parent",
        "niceName": "Name for users",
        "code": "Code"
      }
    },
    "formDefinitions": {
      "header": "Form definitions",
      "title": "Form definitions",
      "edit": {
        "title": "Form definition detail"
      },
      "create": {
        "title": "New form definition",
        "header": "New form definition"
      },
      "filter": {
        "text": "Name"
      },
      "attributes": {
        "title": "Form Attributes"
      },
      "detail": {
        "title": "Basic information"
      },
      "save": {
        "success": "Form definition [{{name}}] was successfully saved"
      }
    },
    "formAttributes": {
      "header": "Form attributes",
      "title": "Form attributes",
      "edit": {
        "title": "Form attribute detail",
        "header": "{{name}} form attribute detail"
      },
      "create": {
        "title": "New attribute",
        "header": "New attribute"
      },
      "save": {
        "success": "Attribute [{{name}}] was successfully saved"
      },
      "filter": {
        "name": "Name"
      }
    },
    "scripts": {
      "header": "Rule definitions",
      "header": "Rule definitions",
      "edit": {
        "title": "Rule detail",
        "header": "{{name}} rule detail"
      },
      "create": {
        "title": "New rule",
        "header": "New rule"
      },
      "save": {
        "success": "The rule [{{name}}] was successfully saved."
      },
      "filter": {
        "text": "Name / Description"
      }
    },
    "roles": {
      "menu-title": "Roles",
      "header": "Roles administration",
      "title": "Roles administration",
      "edit": {
        "title": "Role details",
        "header": "{{name}} details"
      },
      "roleCataloguePick": "Select folder",
      "create": {
        "header": "New role"
      },
      "save": {
        "success": "The role [{{name}}] was successfully saved."
      },
      "processRoleChange": {
        "roleName": "Role name",
        "roleValidFrom": "Valid from",
        "roleValidTill": "Valid to",
        "currentActivity": "application status"
      },
      "processPermissionChange": {
        "currentActivity": "Status",
        "processInstanceName": "Request subject"
      },
      "setting": {
        "basic": {
          "header": "Default role settings"
        },
        "system": {
          "info": "System roles are used for application processes. For system roles its possible to change just settings independent on application logic."
        },
        "authority": {
          "header": "Granted permissions <small>(category)</small>",
          "select": {
            "none": "Remove all permissions in category",
            "all": "Add all permisions on category"
          },
          "group": {
            "hide": "Hide settigs of bacic permissions in category",
            "show": "Show settigs of bacis permissions in category"
          }
        },
        "approval": {
          "header": "Approval workflows"
        }
      },
      "tabs": {
        "basic": "Basic  information"
      },
      "delete": {
        "identityAssigned": {
          "title": "Removing role is assign on users",
          "message": "Role [{{role}}] is assign to users. Befor removing the role you need to take it from users."
        }
      }
    },
    "roleRequests": {
      "header": "Requests for roles",
      "title": "Requests for roles",
      "applicant": "Applicant",
      "create": {
        "header": "Create new request to change the permissions"
      },
      "button": {
        "createRequest": "Create request"
      }
    },
    "roleRequestDetail": {
      "header": "Request to change permissions",
      "title": "Change permissions",
      "conceptHeader": "Requested change of permissions",
      "conceptWithCurrentRoleHeader": "Current assigned roles (includes requested changes)",
      "save": {
        "success": "Request to change permissions was successfully saved",
        "start": "Execute request"
      },
      "action": {
        "startRequest": {
          "header": "Do you really want execute this request",
          "message": "Do you really want execute this request and start approval process?",
          "started": "Request was started"
        }
      }
    },
    "role": {
      "identities": {
        "header": "Users with assigned role",
        "title": "Users with role"
      },
      "eav": {
        "header": "More information",
        "title": "More information",
        "save": {
          "success": "Extended attributes for role [{{name}}] was successfully saved."
        },
        "error" : {
          "notFound": "Extended attributes definition for role not found."
        }
      },
      "tree-nodes": {
        "header": "Automatic roles",
        "title": "Automatic roles",
        "label": "Automatic roles",
        "edit": {
          "header": "{{name}} <small>automatic role detail</small>"
        },
        "create": {
          "header": "New automatic role"
        },
        "save": {
          "success": "Automatic role [{{record}}] was successfully saved"
        },
        "action": {
          "delete": {
            "action": "Remove",
            "header_1": "Removing automatic role",
            "header_2": "Removing automatic roles",
            "header_5": "$t(action.delete.header_2)",
            "message_1": "Do you want to remove selected record [<strong>{{record}}</strong>]? All assigned roles dependent on removed automatic role will be removed too.",
            "message_2": "Select records: [<strong>{{records}}</strong>].<br /><br />Do you want to remove <strong>{{count}}</strong> selected records? All assigned roles dependent on removed automatic role will be removed too.",
            "message_5": "Select records: [<strong>{{records}}</strong>].<br /><br /Do you want to remove <strong>{{count}}</strong> selected records? All assigned roles dependent on removed automatic role will be removed too.",
            "error": "An error occurred while removing [{{record}}].",
            "success_1": "Selected record [{{record}}] was successfully deleted",
            "success_2": "Selected records [{{records}}] were successfully deleted",
            "success_5": "Selected records [{{records}}] were successfully deleted"
          }
        }
      }
    },
   "identity": {
      "sidebar": {
        "profile": "Personal data",
        "password": "Change password",
        "roles": "Roles",
        "accounts": "Accounts on systems",
        "approve": "Schvaluji role",
        "subordinates": "Subordinates",
        "positions": "Contracted positions",
        "approve": "Approver of roles"
      },
     "profile": {
        "header": "Personal data",
        "title": "My profile",
        "userDetail": "User details",
        "username": "$t(entity.Identity.username)",
        "lastName": "$t(entity.Identity.lastName)",
        "firstName": "$t(entity.Identity.firstName)",
        "email": {
          "label": "$t(entity.Identity.email)",
          "placeholder": "Users e-mail"
        },
        "phone": {
          "label": "$t(entity.Identity.phone)",
          "placeholder": "Phone number"
        },
        "description": {
          "label": "$t(entity.Identity.description)",
          "placeholder": "Notes to user"
          },
        "active": "Active",
        "button": {

        },
        "validation": {
          "passwordsNotMatch": "Zadané nové heslo se neshoduje se zadaným heslem pro kontrolu.",
          "newIdmManagerIsTheSame": {
            "title": "Uživatel {{username}} je shodný s deaktivovaným uživatelem",
            "message": "Vyberte prosím jiného uživatele, který má býti nastaven jako nový vedoucí"
          },
          "newIdmManagerIsRequired": {
            "title": "Please select user",
            "message": "Please select user, which will be new authorizer"
          }
        },
        "messages": {
          "deactiveDisabled": "You cannot inactivate yourself.",
          "subordinatesCount": "Uživatel <strong>{{username}}</strong>, který má býti deaktivovaný, je vedoucím pro <strong>{{subordinatesCount}}</strong> uživatelů. <br/> Vyberte prosím nového vedoucího pro všechny zobrazené uživatele.",
          "saved": "Uživatel {{username}} byl úspěšně uložen",
          "deactivated": "Uživatel {{username}} byl úspěšně deaktivován",
          "deactivateBreak": {
            "title": "Nastavení nového vedoucícho bylo přerušeno",
            "message": "Nový vedoucí byl úspěšně nastaven pro {{deactivateCounter}} uživatelů. Poté došlo k přerušení operace. V operaci je možné pokračovat."
          },
          "switchedIdmManager": {
            "title": "Nastavení nového vedoucího",
            "message": "Nastavení nového vedoucího {{newIdmManager}} místo původního {{previousIdmManager}} úspěšně proběhlo."
          },
          "switchIdmManagerFailed": {
            "title": "Chyba při ukládání uživatele {{identity.username}} (pokračuji ve zpracování)"
          }
        },
        "deactivate": {
          "proceed": "Nastavení nového vedoucího probíhá ...",
          "selectIdmManager": "Výběr nového vedoucího",
          "confirm": {
            "header": "Potvrzení deaktivace uživatele",
            "message": "Uživatel <strong>{{username}}</strong> nemá pod sebou žádné podřízené. Opravdu požadujete deaktivovat uživatele <strong>{{username}}</strong>?"
          },
          "form": {
            "newIdmManager": "Vyberte prosím nového vedoucího"
          },
          "button": {
            "break": {
              "title": "Přeruší zpracování - doposavaď zpracování uživatelé budiž zpracovaní",
              "label": "Přerušit operaci",
              "proceed": "Přerušuji operaci ..."
            }
          }
        },
        "organizationPosition": {
          "title": "Position in organization structure"
        }
      },
      "roles": {
        "header": "$t(navigation.menu.roles.label)",
        "title": "$t(navigation.menu.roles.label)",
        "changePermissions": "Manage authorizations",
        "authorities": "Granted authorizations <small>from assigned roles</small>",
        "changeRoleProcesses": {
          "header": "Roles pending approval",
          "deleteConfirm": "Opravdu chcete smazat vybranou žádost o změnu oprávnění?",
          "deleteSuccess": "Žádost o změnu oprávnění byla úspěšně smazána."
        },
        "changePermissionProcesses": {
          "header": "Requests for authorization change "
        },
        "create": {
          "header": "Přiřazení nové role",
          "success": "Uživateli [{{username}}] byla úspěšně přidána role [{{role}}].",
          "accepted": "Role [{{role}}] pro uživatele [{{username}}] byla úspěšně předána ke zpracování. Role musí býti před přiřazením nejdříve schválena."
        },
        "edit": {
          "header": "{{role}} <small>assignment details</small>",
          "success": "Role [{{role}}] uživatele [{{username}}] byla úspěšně upravena."
        },
        "delete": {
          "success": "Role [{{role}}] uživatele [{{username}}] byla úspěšně odebrána."
        },
        "contracts": {
          "empty": {
            "message": "Uživatel nemá žádné pracovně právní vztahy, ke kterým by mohly býti přiřazeny role. Přidejte prosím alespoň jeden pracovně právní vztah.",
            "button": "Přidat PPV"
          }
        }
      },
      "passwordChange": {
        "header": "Password",
        "title": "Password",
        "password": {
          "old": "Current password",
          "new": "New password",
          "newAgain": "Re-enter new password",
          "strength": "Password strength:"
        },
        "changeType": {
          "DISABLED": "Změna hesla není na tomto prostředí povolena.",
          "CUSTOM": "Změnit heslo je možné na každém účtu zvlášť.",
          "ALL_ONLY": "Změnit heslo je možné pouze pro všechny účty naráz."
        },
        "accounts": {
          "label": "On systems",
          "placeholder": "Vyberte koncový systém, na kterém chcete změnit heslo"
        },
        "message": {
          "wrongUser": "Změna hesla pro podřízeného není podporována",
          "success": "Heslo na účtech [{{accounts}}] pro uživatele [{{username}}] bylo úspěšně změněno.",
          "isAdmin": "You are logged in as administrator. Original password is not required for password change. Password can be changed on selected systems. Number of changes is not limited."
        },
        "button": {
          "change": "Change password"
        }
      },
      "passwordReset": {
        "header": "Resetování hesla",
        "title": "Resetování hesla",
        "info": "Následujícím uživatelům bude resetováno heslo ve vybraných systémech",
        "message": {
          "loadResourcesFailed": "Při načítání účtů na systémech pro uživatele {{username}} nastala chyba",
          "resetFailed": "Resetování hesla pro uživatele {{username}} selhalo",
          "resetSuccess": "Resetování hesla pro uživatele {{usernames}} úspěšně proběhlo"
        },
        "confirm": {
          "title": "Resetování hesla",
          "message_1": "Opradu požadujete resetovat hesla uživatele <strong>{{username}}</strong> na vybraných systémech?",
          "message_2": "Opradu požadujete resetovat hesla <strong>{{count}}</strong> vybraných uživatelů na vybraných systémech?",
          "message_5": "Opradu požadujete resetovat hesla <strong>{{count}}</strong> vybraných uživatelů na vybraných systémech?"
        },
        "accounts": {
          "empty": "Uživatel {{username}} nemá účet na systému {{resource}}"
        },
        "users": {
          "empty": "Vyberte prosím uživatele, kterým má býti resetováno heslo."
        },
        "selection": {
          "empty": "Vyberte prosím alespoň jednoho uživatele a systém, na kterém má býti resetováno heslo"
        },
        "button": {
          "reset": "Resetovat heslo"
        },
        "label": {
          "selectAllUsername": "$t(label.selectAll) od daného uživatele",
          "selectAllResource": "$t(label.selectAll) od daného systému"
        }
      },
      "identityRoleDetail": {
        "label": "Detail záznamu"
      },
      "accounts": {
        "header": "Účty na systémech",
        "title": "$t(content.identity.accounts.header)",
        "empty": "Nenalezeny žádné účty na koncových systémech."
      },
      "identityContracts": {
        "header": "Contracted positions",
        "title": "$t(content.identity.identityContracts.header)",
        "identityContracts": {
          "empty": "Contracted positions not found."
        },
        "delete": {
          "success": "Contracted position [{{position}}] for user [{{username}}] was successfully removed."
        }
      },
      "approve": {
        "header": "Schvalovatel pro role",
        "title": "$t(content.identity.approve.header)"
      },
      "create": {
        "header": "Creating a new user",
        "title": "New user",
        "button": {
          "generate": "Generate password",
          "add": " Create user"
        },
        "message": {
          "success": "User [{{username}}] was successfully created."
        }
      },
      "delegates": {
        "header": "Delegace úkolů",
        "title": "$t(content.identity.delegates.header)",
        "empty": "Nenalezeny žádné nastavené delegace.",
        "message": {
          "save": {
            "success": "Uložení delegace na uživatele [{{delegate}}] úspěšně proběhlo."
          },
          "delete": {
            "confirm": {
              "title": "Odebrání delegace",
              "message": "Opravdu chcete odebrat delegaci na uživatele <strong>{{delegate}}</strong>?"
            },
            "success": "Odebrání delegace na uživatele [{{delegate}}] úspěšně proběhlo."
          }
        },
        "button": {
          "add": "Přidat delegaci",
          "delete": "Odebrat delegaci na uživatele {{delegate}}"
        },
        "create": {
          "header": "Nová delegace",
          "button": {
            "save": "Uložit delegaci",
            "saving": "Ukládám delegaci ..."
          }
        },
        "delete": {
          "header": "Probíhá odebírání delegace"
        }
      },
      "subordinates": {
        "header": "Subordinates",
        "title": "$t(content.identity.subordinates.header)"
      },
      "eav": {
        "header": "More information",
        "title": "More information",
        "save": {
          "success": "Extended attributes for identity [{{name}}] was successfully saved."
        },
        "error" : {
          "notFound": "Extended attributes definition for identity not found."
        }
      },
      "garanted-roles": {
        "header": "Authorizer <small>User is authorizer of these roles</small>",
        "title": "Authorize roles"
      }
    },
    "identity-contract": {
      "detail": {
        "header": "Contracted position detail",
        "title": "Contracted position detail",
        "label": "Basic information",
        "invalidContract":"Invalid contracted position detail",
        "validContract":"Contracted position detail",
        "edit": {
          "title": "Contracted position detail",
          "header": "{{position}} <small>contracted position detail</small>",
          "success": "Contracted position [{{position}}] for user [{{username}}] was successfully saved."
        },
        "create": {
          "title": "New contracted position",
          "header": "New contracted position",
          "success": "Contracted position [{{position}}] for user [{{username}}] was successfully saved.",
          "accepted": "Contracted position [{{position}}] for user [{{username}}] was accepted. Contracted position has to be approved at first."
        },
        "save": {
          "success": "Contracted position [{{name}}] was successfully saved."
        }
      },
      "eav": {
        "header": "More information",
        "title": "More information",
        "label": "More information",
        "save": {
          "success": "Extended attributes for contracted position [{{name}}] was successfully saved."
        },
        "error" : {
          "notFound": "Extended attributes definition for contracted position not found."
        }
      }
    },
    "organizations": {
      "header": "Organizational structure overview",
      "title": "Organizational structure overview",
      "label": "Organization",
      "defaultTreeType": {
        "empty": {
          "message": "Default tree type is not configured.",
          "button": "Define default type"
        }
      }
    },
    "audit": {
      "header": "Audit",
      "headerSmall": "záznamy auditních logů",
      "title": "Audit"
    },
    "system": {
      "modules": {
        "header": "Aplication modules and components",
        "title": "Modules"
      },
      "fe-modules": {
        "header": "Aplikační moduly a komponenty",
        "title": "Modules (frontend)",
        "components": {
          "header": "Components",
          "priority": "Priority",
          "type": "Type",
          "order": "Order",
          "overriden": "Component overriden in module: {{moduleId}}"
        }
      },
      "be-modules": {
        "header": "Modules <small>backend</small>",
        "title": "Modules (backend)"
      },
      "entity-event-processors": {
        "header": "Processors",
        "title": "Processors"
      }
    },
    "scheduler": {
      "header": "Scheduler",
      "title": "Task scheduler",
      "running-tasks": {
        "header": "Running tasks",
        "title": "Running tasks",
        "empty": "No running tasks found",
        "button": {
          "cancel": "End task",
          "interrupt": "Interrupt task"
        },
        "action": {
          "task-cancel": {
            "header": "Cancel running task",
            "message": "Do you really was to cancel task [<strong>{{record}}</strong>]?",
            "success": "Task [{{record}}] will be canceled as soon is possilbe (after current item is processed)."
          },
          "task-interrupt": {
            "header": "Interrupt running task",
            "message": "Do you really was to interupt task [<strong>{{record}}</strong>]?",
            "success": "Task [{{record}}] was interrupted."
          }
        }
      },
      "schedule-tasks": {
        "header": "Scheduled tasks",
        "title": "Scheduled tasks",
        "button": {
          "run": "Run manualy"
        },
        "action": {
          "trigger-delete": {
            "header": "Odebrat plánované spuštění",
            "message": "Opravdu chcete odebrat plánované spuštení [<strong>{{record}}</strong>]?",
            "success": "Plánované spuštení [{{record}}] bylo úspěšně odebráno."
          },
          "trigger-create": {
            "header": "New scheduled run",
            "success": "Scheduled run was successfully added."
          },
          "task-create": {
            "header": "Nová úloha",
            "success": "Nová úloha [{{record}}] byla úspěšně vytvořena."
          },
          "task-edit": {
            "header": "Task details",
            "success": "Task [{{record}}] was successfully updated.",
            "parameters": "Task parameters"
          },
          "task-run": {
            "success": "Úloha [{{record}}] was successfully started."
          },
          "task-delete": {
            "header": "Odebrat úlohu",
            "message": "Opravdu chcete odebrat úlohu [<strong>{{record}}</strong>]?",
            "success": "Úloha [{{record}}] byla úspěšně odebrána."
          },
          "save": {
            "success": "Task [{{record}}] was successfully saved ."
          }
        }
      },
      "all-tasks": {
        "header": "All tasks",
        "title": "All tasks",
        "filter": {
          "dateFrom": {
            "label": "from",
            "placeholder": "Date from"
          },
          "dateTill": {
            "label": "To",
            "placeholder": "Date to"
          },
          "text": {
            "label": "Klíč / Typ",
            "placeholder": "Klíč nebo typ úlohy"
          },
          "text": {
            "label": "Typ / Popis",
            "placeholder": "Typ nebo popis úlohy"
          },
          "operationState": {
            "label": "State",
            "placeholder": "Task state"
          }
        },
        "detail": {
          "header": "Task details",
          "result": "Result",
          "resultCode": "Code"
        },
        "action": {
          "processCreated": {
            "button": "Run created tasks",
            "success": "Created task will be executed."
          }
        }
      }
    },
    "notifications": {
      "header": "Notifications history",
      "label": "Notifications history",
      "title": "Záznamy odeslaných notifikací",
      "filter": {
        "dateFrom": {
          "label": "From",
          "placeholder": "Date from"
        },
        "dateTill": {
          "label": "To",
          "placeholder": "Date to"
        },
        "text": {
          "label": "Message",
          "placeholder": "Subject, content"
        },
        "sender": {
          "label": "Sender",
          "placeholder": "Sender ..."
        },
        "recipient": {
          "label": "Recipient",
          "placeholder": "Recipient ..."
        },
        "sent": {
          "label": "Sent",
          "placeholder": "Sending status ..."
        }
      }
    },
    "notification": {
      "headerNew": "Notification",
      "header": "Notification details",
      "title": "Notification details",
      "titleNew": "Notification",
      "relatedNotifications": "Záznamy při odeslání",
      "label": {
        "notSent": "Neodesláno",
        "sentPartly": "Částečně"
      },
      "sent": {
        "success": "Odeslání notifikace bylo úspěšné"
      }
    },
    "notificationTemplate": {
      "headerNew": "New template",
      "header": "Template",
      "title": "Templates ",
      "titleNew": "New template",
      "save": {
        "success": "Template [{{name}}] was successfully saved."
      },
      "filter": {
        "text": "Name / Subject / Code"
      }
    },
    "emails": {
      "header": "E-mails history",
      "title": "E-mails history"
    },
    "email": {
      "header": "E-mail details",
      "title": "E-mail details",
      "relatedNotifications": "Záznamy při odeslání",
      "label": {
        "notSent": "Neodesláno",
        "sentPartly": "Částečně"
      }
    },
    "websockets": {
      "header": "Websocket history",
      "title": "Websocket history"
    },
    "websocket": {
      "header": "Websocket message details",
      "title": "Websocket message details"
    },
    "notificationConfigurations": {
      "label": "Configuration",
      "header": "Notifications configuration",
      "title": "Notifications configuration",
      "edit": {
        "header": "{{name}} <small>item configuration details</small>"
      },
      "create": {
        "header": "New configuration item"
      },
      "save": {
        "success": "Položka konfigurace [{{name}}] byla úspěšně uložena"
      }
    },
    "workflow" : {
      "definition": {
        "title": "Workflow definition details",
        "header": "Workflow definition details",
        "name": "Name",
        "key": "Key",
        "version": "Version",
        "description": "Description",
        "resourceName": "Resource name",
        "category": "Category",
        "diagramResourceName": "Schmena name",
        "deploymentId": "Deployment ID",
        "resourceName": "Resource name",
        "id":"Identificator",
        "diagram": "Process preview",
        "fullscreenDiagram": "Process preview"
      },
      "definitions": {
        "title": "Workflow definitions management",
        "header": "Workflow definitions management",
        "name": "$t(content.workflow.definition.name)",
        "key": "$t(content.workflow.definition.key)",
        "version": "$t(content.workflow.definition.version)",
        "description": "$t(content.workflow.definition.description)",
        "resourceName": "$t(content.workflow.definition.resourceName)",
        "fileRejected": "Soubor s definicí workflow musí mít příponu bpmn20.xml ({{name}})!",
        "filesRejected": "Soubor/y s definicí workflow musí mít příponu bpmn20.xml!",
        "fileUploded": "Definice ({{name}}) byla úspěšně nahrána.",
        "id":"$t(content.workflow.definition.id)"
      },
      "history":{
        "processes":{
          "title": "History of worfklow processes",
          "header": "History of worfklow processes <small>approving, tasks</small>"
        },
        "process":{
          "title": "History of process",
          "header": "History of process",
          "diagram": "Process diagram",
          "fullscreenDiagram": "Process diagram",
          "startTime": "$t(entity.WorkflowHistoricProcessInstance.startTime)",
          "endTime": "$t(entity.WorkflowHistoricProcessInstance.endTime)",
          "deleteReason": "$t(entity.WorkflowHistoricProcessInstance.deleteReason)",
          "name": "$t(entity.WorkflowHistoricProcessInstance.name)",
          "startActivityId": "$t(entity.WorkflowHistoricProcessInstance.startActivityId)",
          "superProcessInstanceId": "$t(entity.WorkflowHistoricProcessInstance.superProcessInstanceId)",
          "id": "$t(entity.WorkflowHistoricProcessInstance.id)",
          "applicant": "$t(entity.WorkflowHistoricProcessInstance.applicant)",
          "tasks": "User tasks in  process",
          "subprocesses": "Sub-processes",
          "filter": {
            "processDefinition":{
              "label": "Definition",
              "placeholder": "Workflow definition"
            }
          }
        },
        "task":{
          "title": "User tasks in  process",
          "header": "User tasks in  process",
          "startTime": "$t(entity.WorkflowHistoricTaskInstance.startTime)",
          "endTime": "$t(entity.WorkflowHistoricTaskInstance.endTime)",
          "deleteReason": "$t(entity.WorkflowHistoricTaskInstance.deleteReason)",
          "name": "$t(entity.WorkflowHistoricTaskInstance.name)",
          "priority": "$t(entity.WorkflowHistoricTaskInstance.priority)",
          "createTime": "$t(entity.WorkflowHistoricTaskInstance.createTime)",
          "id": "$t(entity.WorkflowHistoricTaskInstance.id)",
          "assignee": "$t(entity.WorkflowHistoricTaskInstance.assignee)",
          "completeTaskDecision": "$t(entity.WorkflowHistoricTaskInstance.completeTaskDecision)"
        }
      }
    },
    "audit": {
      "header": "Audit",
      "title": "Audit",
      "title-entities": "Entity history",
      "modifier": "Action executor",
      "date": "Date of change",
      "empty": "Without records",
      "pickRevision": "Select revision",
      "detail": "Revision details",
      "id": "ID",
      "noPreviousRevision": "No previous revision",
      "profile": {
        "userDetail": "{{revision}}. revize, {{name}}, {{date}}"
      },
      "revision": {
        "id": "Revision ID",
        "modifier": "Modified by",
        "type": "Entity type",
        "modification": "Modification type",
        "revisionDate": "Date of revision",
        "deleted": "Entity was deleted",
        "created": "Entity was created",
        "entityId": "Entity ID",
        "modificationType": {
          "ADD": "Added",
          "MOD": "Modified",
          "DEL": "Deleted"
        }
      },
      "filter": {
        "dateFrom": {
          "label": "from",
          "placeholder": "Date from"
        },
        "dateTill": {
          "label": "To",
          "placeholder": "Date to"
        }
      }
    }
  },
  "entity": {
    "created": "Created",

     "Identity": {
      "_type": "User",
      "username": "Login",
      "firstName": "First name",
      "lastName": "Surname",
      "email": "E-mail",
      "phone": "Phone",
      "description": "Note",
      "password": "Password",
      "passwordAgain": "Re-enter password",
      "homeOrganisation": "Home organization",
      "disabled": "Inactive",
      "internist": "Employee",
      "externe": "External contractor",
      "titleBefore": "Titles before",
      "titleAfter": "Titles after"
    },
    "RoleCatalogue": {
      "_type": "Role name",
      "code": {
        "name": "Code",
        "help": "Catalogue code is unique within all folder codes in catalogue."
      },
      "name": {
        "name": "Folder name",
        "help": "Descriptive attribute for users. Unique within catalog level."
      },
      "url": "URL",
      "urlTitle": "URL title",
      "description": "description",
      "parent": {
        "name": "Parent folder in catalogue"
      },
      "filter": {
        "name": "Code",
        "namePlaceHolder": "Folder name",
        "parent": "Parent folder",
        "parentPlaceHolder": "Parent folder",
        "niceName": "Name for users"
      }

    },
    "Script": {
      "name": "Rule name",
      "category": "Category",
      "script": {
        "help": "Rule body, Groovy script.",
        "label": "Rule"
       },
      "description": "Rule description"
    },
    "FormDefinition" : {
      "type": "Type",
      "name": "Name"
    },
    "FormAttribute" : {
      "displayName": "Display name",
      "seq": "Order",
      "persistentType": "Attribute type",
      "description": "Description",
      "name": "Name",
      "required": "Required",
      "readonly": "Read-only",
      "confidential": "Confidential",
      "multiple": "Multi valued",
      "placeholder": "Placeholder",
      "defaultValue": "Default value",
      "systemAttribute": "System attribute"
    },
    "Role": {
      "_type": "Role",
      "name": "Role name",
      "roleType": "Role type",
      "priority": "Priority",
      "priorityEnum": "Priority level",
      "disabled": "Inactive",
      "approvable": "Approval required",
      "superiorRoles": "Superior roles",
      "subRoles": "Subordinate roles",
      "authorities": "Oprávnění",
      "approveAddWorkflow": "Assign approval (WF)",
      "approveRemoveWorkflow": "Remove approval (WF)",
      "description": "Role description",
      "guarantees": "Role authorizers",
      "roleCatalog": {
        "name": "Catalog"
      },
      "RoleTreeNode": {
        "_type": "Automatic role",
        "role": "Role",
        "treeNode": "Tree node",
        "recursionType": "Reursion type"
      }
    },
    "IdentityRole": {
      "role" : "Role name",
      "identityContract": {
        "label": "Contracted position",
        "title": "Contracted position",
        "placeholder": "Contracted position",
        "help": "Connection to organization or another tree strucure"
      },
      "roleTreeNode": {
        "label": "Automatic role",
        "title": "Automatic role",
        "placeholder": "Automatic role",
        "help": "Role from contracted position"
      }
    },
    "IdentityAccount": {
      "attribute": {
        "name": "Atributte",
        "value": "Value"
      }
    },
    "Attachment": {
      "name": "Name",
      "description": "Description",
      "mimetype": "Type",
      "encoding": "Coding",
      "filesize": "Size [B]",
      "versionLabel": "Version"
    },
    "ApprovalTask": {
      "taskId": "Identifikátor",
      "taskName": "Task name",
      "createdDate": "Created",
      "closedDate": "Closed",
      "relatedTaskId": "ID of WF instance",
      "approvedBy": "Approved by",
      "taskState": "State",
      "note": "Note"
    },
    "IdentityContract": {
      "_type": "Positions",
      "id": "Internal position ID",
      "treeType": "Structure type",
      "workingPosition": "Position",
      "position": "Work position",
      "identity": "User",
      "validFrom": "Valid from",
      "validTill": "Valid to",
      "guarantee": "Authorizer",
      "externe": "External contractor",
      "managers": {
        "label": "Authorizer",
        "title": "Authorizer and all managers for position in structure"
      },
      "disabled": {
        "label": "Inactive",
        "help": "Inactive work position. Has higher priority than valid dates. Invalid work position is automatically set to inactive and all assigned roles to this positio are removed."
      },
      "description": "Note",
      "main": {
        "label": "Default position",
        "help": "Prime work position."
      }
    },
    "TreeNode": {
      "_type": "Tree node",
      "id": "Identifier",
      "code": "Code",
      "name": "Name",
      "disabled": "Inactive",
      "shortName": "Name",
      "parentId": "Superior element",
      "parent": {
          "name": "Superior element"
      },
      "treeType": {
        "name": "Structure type"
      }
    },
    "TreeType": {
      "_type": "Structure",
      "code": "Code",
      "name": "Name",
      "defaultTreeType": {
        "label": "Default tree",
        "help": "This tree type will be used as default organization structure."
      },
      "defaultTreeNode": {
        "label": "Default tree element",
        "help": "This tree element will be used as default, e.g. for default work position."
      }
    },
    "Delegate": {
      "_type": "Delegace",
      "id": "Interní id",
      "identity": "User",
      "delegate": "To user",
      "from": "from",
      "till": "to",
      "state": "Delegation state",
      "isDateUnlimited": "Unlimited date"
    },
    "WorkflowTaskInstance": {
      "taskDescription": "Subject",
      "taskCreated": "Created on",
      "id": "task ID"
    },
    "WorkflowHistoricProcessInstance": {
      "name": "Process name",
      "startTime": "Created on",
      "endTime": "Ends on",
      "startActivityId": "Started by activity",
      "deleteReason": "Reason for deletion",
      "superProcessInstanceId": "Parent process ID",
      "id": "ID",
      "applicant": "Applicant"
    },
    "WorkflowHistoricTaskInstance": {
      "name": "Task name",
      "startTime": "Creation date",
      "endTime": "Ends on",
      "assignee": "Assigned by",
      "deleteReason": "Completed",
      "id": "ID",
      "priority": "Priority",
      "createTime": "Created on",
      "completeTaskDecision": "Result",
      "candicateUsers": "Authorizers"
    },
    "Notification": {
      "topic": "Subject",
      "created": "$t(entity.created)",
      "message": {
        "level": "Level",
        "subject": "Subject",
        "message": "Message",
        "textMessage": "Message (text)",
        "htmlMessage": "Message (html)",
        "model": "Message (model)"
      },
      "sender": "Sender",
      "recipients": "Recipients",
      "sent": "Sent",
      "sentLog": "Zpráva při odeslání",
      "type": "Type",
      "template": "Template"
    },
    "NotificationTemplate": {
      "name": "Name",
      "code": "Code",
      "subject": "Subject",
      "parameter": {
        "name": "Parameters",
        "help": "List of template parameters. Parameters separate by comma."
      },
      "systemTemplate": {
        "name": "System template",
        "help": "System templates is necessary for correct functioning application. System templates can't be removed or change their code."
      },
      "bodyHtml": {
      "name": "Message body (html)",
      "help": "For a list of available templates write character '$'"
      },
      "bodyText": "Message body (text)"
    },
    "NotificationConfiguration": {
      "_type": "Konfigurace notifikace",
      "topic": "$t(entity.Notification.topic)",
      "level": "Type",
      "notificationType": "Channel",
      "template": "Template",
      "description": "Description"
    },
    "Email": {
      "topic": "$t(entity.Notification.topic)",
      "created": "$t(entity.Notification.created)",
      "message": {
        "subject": "$t(entity.Notification.message.subject)",
        "message": "$t(entity.Notification.message.message)",
        "textMessage": "$t(entity.Notification.message.textMessage)",
        "htmlMessage": "$t(entity.Notification.message.htmlMessage)",
        "htmlMessage": "$t(entity.Notification.message.htmlMessage)",
        "model": "$t(entity.Notification.message.model)",
        "level": "$t(entity.Notification.message.level)"
      },
      "sender": "$t(entity.Notification.sender)",
      "recipients": "$t(entity.Notification.recipients)",
      "sent": "$t(entity.Notification.sent)",
      "sentLog": "$t(entity.Notification.sentLog)",
      "type": "$t(entity.Notification.type)"
    },
    "WebsocketLog": {
      "topic": "$t(entity.Notification.topic)",
      "created": "$t(entity.Notification.created)",
      "message": {
        "subject": "$t(entity.Notification.message.subject)",
        "message": "$t(entity.Notification.message.message)",
        "textMessage": "$t(entity.Notification.message.textMessage)",
        "htmlMessage": "$t(entity.Notification.message.htmlMessage)",
        "model": "$t(entity.Notification.message.model)",
        "level": "$t(entity.Notification.message.level)"
      },
      "sender": "$t(entity.Notification.sender)",
      "recipients": "$t(entity.Notification.recipients)",
      "sent": "$t(entity.Notification.sent)",
      "sentLog": "$t(entity.Notification.sentLog)",
      "type": "$t(entity.Notification.type)"
    },
    "Configuration": {
      "name": "Key",
      "value": "Value",
      "secured": "System",
      "public": "Public",
      "confidential": "Confidential"
    },
    "Audit": {
      "label": "Audit",
      "id": "Revision ID",
      "modification": "Actions",
      "modifier": "Executed by",
      "revisionDate": "Date of revision",
      "changedAttributes": "Changed attributes",
      "type": "Entity type",
      "key": "Attribute",
      "value": "Value",
      "entityId": "Entity ID"
    },
    "PasswordPolicy": {
      "type": "Type",
      "name": "Name",
      "basic": "Základní údaje",
      "bases": "Znaky",
      "generateType": "Generation type",
      "disabled": "Disabled",
      "description": "Description",
      "defaultPolicy": "Default policy",
      "passwordLengthRequired": "Password length requirement",
      "minPasswordLength": "Minimum length",
      "maxPasswordLength": "Maximum length",
      "upperCharRequired": "Uppercase letters requirement",
      "minUpperChar": "Minimum number of uppercase letters",
      "lowerCharRequired": "Lowercase letters requirement",
      "minLowerChar": "Minimum number of lowercase letters",
      "numberRequired": "Digits requirement",
      "minNumber": "Minimum number of digits",
      "specialCharRequired": "Special characters requirement",
      "minSpecialChar": "Minimum number of special characters",
      "prohibitedCharacters": "Forbidden characters",
      "weakPassRequired": "Povinné slabé hesla",
      "weakPass": "Slabé hesla",
      "passphraseWords": "Number of words in passphrase",
      "maxPasswordAge": "Maximum number of days for password validity.",
      "minPasswordAge": "Minimum number of days for password validity.",
      "enchancedControl": "Enhanced control",
      "minRulesToFulfill": "Minimum number of additional rules for policy",
      "maxHistorySimilar": "Nuber of checked old passwords  zpětně kontrolovaných hesel na shodu",
      "lowerCharBase": "Lowercase letters",
      "upperCharBase": "Uppercase letters",
      "numberBase": "Digits",
      "specialCharBase": "Special characters",
      "identityAttributeCheck": "User attributes not allowed in password",
      "help": {
        "defaultPolicy": "Defaul policy is used for password validation for IdM system and all systems without set password policy.",
        "maxPasswordAge": "Maximum number of days for password validity.",
        "minPasswordAge": "Minimum number of days for password validity.",
        "enchancedControl": "Rozšířená kontrola hesla zkvalitňuje základní validaci hesla a to o kontrolu podobnosti na minulé hesla a kontrolu podobnosti s uživatelskými atributy. Také je možnost nastavit povinná pouze některá pravidla.",
        "rules": "Pravidla označená jako nepovinná budou kontrolovány v závislosti na minimálním početu pravidel pro splnění politiky. Aby heslo prošlo validací politky, musí projít minimálním počtem z nepovinných pravidel.",
        "minRulesToFulfill": "Minimum number of the requirements which password must match to be valid.",
        "maxHistorySimilar": "Number of retroactively checked passwords, which cannot be same as new.",
        "prohibitedCharacters": "Listed characters are not allowed for generating and validating passwords. Enter characters without spaces, e.g. 1LliIo0!",
        "bases": "Character set allowed for password generation. Forbidden characters are excluded from sets.",
        "identityAttributeCheck": "Password may not contain any listed attributes or variations thereof.",
        "emptyValues": "To omit any field, leave it empty or set value to 0.",
        "passphraseWords": "Select number of words passphrase contains."
      }
    },
    "Module": {
      "id": "ID",
      "name": "Module name",
      "vendor": "Provider",
      "version": "Version",
      "description": "Description",
      "disabled": "Inactive"
    },
    "EntityEventProcessor": {
      "id": "ID",
      "name": "Name",
      "module": "Module",
      "description": "Description",
      "entityType": "Typ entity",
      "eventTypes": "Event types",
      "order": "Order",
      "disabled": "Inactive",
      "disableable": "Nelze vypnout",
      "closeable": "Uzavírá zpracování"
    },
    "LongRunningTask": {
      "taskId": "Task ID",
      "taskType": "Task type",
      "taskDescription": "Description",
      "count": "Count",
      "counter": "Processed",
      "result": {
        "state": "State"
      },
      "instanceId": {
        "label": "Instance",
        "help": "Task will be executed on server (instance identifier)"
      },
      "duration": "Task duration"
    },
    "ScheduleTask": {
      "id": "Identifikátor",
      "taskType": "Task type",
      "instanceId": {
        "label": "Instance",
        "help": "Execute on server (instance identifier)"
      },
      "description": "Description",
      "triggers": "Scheduled starts",
      "trigger": {
        "_type": {
          "label": "Type",
          "help": "Scheduled start type"
        },
        "fireTime": "Fire time",
        "cron": {
          "label": "Cron expression",
          "help": "Quartz cron",
          "link": {
            "href": "http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger.html",
            "text": "expression"
          }
        }
      }
    },
    "RoleRequest": {
      "applicant": "Applicant",
      "state": "State",
      "executeImmediately": "Execute without approval",
      "log": "Log",
      "description": {
        "label" : "Description",
        "placeholder": "Verbal description of a request to change the permissions"
      },
      "created": "Created",
      "modified": "Modified"
    },
    "ConceptRoleRequest": {
      "identityContract": "Employment relationship",
      "operation": "Operation",
      "role": "Role",
      "validFrom": "From",
      "validTill": "Till",
      "wfProcessId": "Id WF process",
      "state": "State",
      "created": "Created",
      "modified": "Modified"
    }
  },
  "decision" : {
    "approve": {
      "label" : "Approve",
      "tooltip": "Executes approval of this task.",
      "warning": "Do you want to approve this request?"
    },
    "disapprove": {
      "label" : "Disapprove",
      "tooltip": "Disapprove task.",
      "warning": "Do you want to disapprove this request?"
    },
    "backToApplicant": {
      "label" : "Return to requester",
      "tooltip": "Executes returning of this request.",
      "warning": "Do you want to return this request?"
    },
    "createRequest": {
      "label" : "Create request",
      "tooltip": "Creates request.",
      "warning": "Opravdu chcete vytvořit žádost?"
    },
    "cancelRequest": {
      "label" : "Delete request",
      "tooltip": "Delete this request.",
      "warning": "Do you really want to delete this request?"
    }
  },
  "formData" : {
    "applicantDescription": {
      "name" : "Requester's note",
      "tooltip": "Requester's note in created request",
      "placeholder": "Requester's note in created request"
    },
    "managerDescriptionForApplicant": {
      "name" : "Note for requester",
      "tooltip": "Poznámka, která bude žadateli zobrazena při várcení žádosti.",
      "placeholder": "Poznámka, která bude žadateli zobrazena při várcení žádosti."
    },
    "managerDescription": {
      "name" : "Authorizers note",
      "tooltip": "Note from authorizer.",
      "placeholder": "Note from authorizer."
    }
  },
  "error": {
    "AUTH_FAILED": {
      "title": "Login failed",
      "message": "Invalid login or password."
    },
    "FORBIDDEN": {
      "title": "Nedostatečná oprávnění",
      "message": "Na požadovanou akci nemáte dostatečná oprávnění."
    },
    "PASSWORD_CHANGE_NO_SYSTEM": {
      "title": "Změna hesla neproběhla",
      "message": "Vyberte alespoň jeden systém, na kterém má býti heslo změněno."
    },
    "PASSWORD_CHANGE_CURRENT_FAILED_IDM": {
      "title": "Změna hesla neproběhla",
      "message": "Zadáno chybné původní heslo."
    },
    "LOG_IN": {
      "title": "Session timeout",
      "message": "Please log-in again."
    },
    "XSRF": {
      "title": "Session timeout",
      "message": "Your login token timeouted. Please log-in again."
    },
    "MUST_CHANGE_IDM_PASSWORD": {
      "title": "Je vyžadována změna Vašeho hesla",
      "message": "Vyžadována změna hesla pro CzechIdM."
    },
    "PASSWORD_RESET_GENERATE_TOKEN": {
      "title": "Zaslání tokenu neproběhlo",
      "message": "{{0}}"
    },
    "PASSWORD_RESET_FAILED": {
      "title": "Reset hesla nepoběhl",
      "message": "{{0}}"
    },
    "PASSWORD_CHANGE_FAILED": {
      "title": "Změna hesla nepoběhla",
      "message": "{{0}}"
    },
    "PASSWORD_DOES_NOT_MEET_POLICY": {
      "title": "Nové heslo nevyhovuje politikám hesel",
      "message": "{{0}}"
    },
    "PASSWORD_CANNOT_CHANGE": {
      "title": "Password wasn't changed",
      "message": "Try it again after {{date}}."
    },
    "PASSWORD_POLICY_MAX_LENGTH_LOWER": {
      "title": "Password policy wasn't saved",
      "message": "Maximální délka nesmí být menší než minimální délka."
    },
    "PASSWORD_POLICY_ALL_MIN_REQUEST_ARE_HIGHER": {
      "title": "Password policy wasn't saved",
      "message": "Součet všech minimálních délek je větší než maximální délka."
    },
    "PASSWORD_POLICY_MAX_AGE_LOWER": {
      "title": "Password policy wasn't saved",
      "message": "Maximální doba pro změnu hesla nesmí být menší než minimální."
    },
    "PASSWORD_POLICY_DEFAULT_TYPE": {
      "title": "Password policy wasn't saved",
      "message": "Standardní politika již existuje."
    },
    "PASSWORD_POLICY_DEFAULT_TYPE_NOT_EXIST": {
      "title": "Password policy wasn't saved",
      "message": "Neexistuje standardní politika."
    },
    "PASSWORD_POLICY_BAD_TYPE": {
      "title": "Password policy wasn't saved",
      "message": "Politika má špatný typ, pro validaci využívejte pouze validační politiky, pro generování pouze politiky pro generování."
    },
    "PASSWORD_POLICY_VALIDATION": {
      "title": "Password policy wasn't saved",
      "message": "Problem with validation of password policy."
    },
    "PASSWORD_POLICY_MAX_RULE": {
      "title": "Exceeded the number of rules",
      "message": "Minimum rules to fulfill can be {{rules}} or less."
    },
    "TASK_SAME_DELEGATE_AS_CURRENT_IDENTITY": {
      "title": "Uložení delegace selhalo",
      "message": "Nelze nastavit delegaci na sebe sama [uživatel: {{identity}}]."
    },
    "ENDPOINT_NOT_FOUND": {
      "title": "Služba neexistuje",
      "message": "Aplikace odkazuje na neexistující cestu [{{path}}]."
    },
    "BAD_REQUEST": {
      "title": "Chybný požadavek"
    },
    "BAD_VALUE": {
      "title": "Špatná volba"
    },
    "BAD_UUID": {
      "title": "Chybný identifikátor",
      "message": "Identifikátor [{{uuid}}] není validní. Očekáváno uuid."
    },
    "ROLE_CATALOGUE_BAD_PARENT": {
      "title": "Nadřazená složka nelze přiřadit.",
      "message": "Neplatná nadřazená složka. Vyberte prosím jinou složku."
    },
    "IDMROLE_NAME_DUPLICATE": {
      "title": "Role již existuje",
      "message": "Role s daným názvem již existuje"
    },
    "CONFLICT": {
      "title": "Záznam koliduje s jiným unikátním záznamem"
    },
    "NAME_CONFLICT": {
      "title": "Konflikt se jménem entity",
      "message": "Záznam s tímto jménem již existuje."
    },
    "IDENTITY_NOT_FOUND": {
      "message": "Identity [{{identity}}] does not exist"
    },
    "MODULE_NOT_DISABLEABLE": {
      "title": "Modul [{{module}}] není možné disablovat",
      "message": "Funkce modulu jsou pro aplikaci nepostradatelné."
    },
    "MODULE_DISABLED": {
      "title": "The module is deactivated",
      "message": "Module [{{module}}] is deactivated or isn't installed."
    },
    "CONFIGURATION_DISABLED": {
      "title": "Funkce je deaktivovaná",
      "message": "Funkce aplikace řízená konfigurační položkou [{{property}}] je deaktivovaná."
    },
    "TREE_TYPE_DELETE_FAILED_HAS_CHILDREN": {
      "title": "Typ struktury nelze odebrat",
      "message": "Typ struktury [{{treeType}}] již obsahuje navázané prvky. Před odebráním tohoto typu odeberte všechny jeho prvky."
    },
    "TREE_TYPE_DELETE_FAILED_HAS_CONTRACTS": {
      "title": "Typ struktury nelze odebrat",
      "message": "Typ struktury [{{treeType}}] je již použit v pracovně právních vztazích. Před odebráním tohoto typu upravte všechny vztahy."
    },
    "TREE_NODE_DELETE_FAILED_HAS_CHILDREN": {
      "title": "Prvek struktury nelze odebrat",
      "message": "Prvek struktury [{{treeNode}}] již obsahuje navázané prvky. Před odebráním tohoto prvku odeberte všechny jeho podřízené prvky."
    },
    "TREE_NODE_DELETE_FAILED_HAS_CONTRACTS": {
      "title": "Prvek struktury nelze odebrat",
      "message": "Prvek struktury [{{treeNode}}] je již použit v pracovně právních vztazích. Před odebráním tohoto prvku upravte všechny vztahy."
    },
    "TREE_NODE_BAD_TYPE": {
      "title": "Wrong element type",
      "message": "Please select different element type."
    },
    "TREE_NODE_BAD_PARENT": {
      "title": "Superior element cannot be set",
      "message": "Invalid superior element, please select another."
    },
    "GROOVY_SCRIPT_VALIDATION": {
      "title": "Groovy script contains compile errors",
      "message": ""
    },
    "GROOVY_SCRIPT_SECURITY_VALIDATION": {
      "title": "Groovy script did not past safety check!",
      "message": "Reason: {{message}}"
    },
    "ROLE_CATALOGUE_DELETE_FAILED_HAS_CHILDREN": {
      "title": "Role catalog cannot be removed",
      "message": "Role catalog [{{roleCatalogue}}] contains child catalog. Remove all child catalogues first."
    },
    "ROLE_CATALOGUE_BAD_NICE_NAME" : {
      "title": "Duplicate name for user",
      "message": "This level already contains this catalog name for user: [{{name}}]."
    },
    "AUDIT_REVISION_NOT_SAME": {
      "title": "Revisions aren't comparable",
      "message": "Revisions must be the same type and from the same entity."
    },
    "BAD_FILTER": {
      "title": "Filter isn't valid",
      "message": "Please check filled values."
    },
    "LONG_RUNNING_TASK_FAILED": {
      "title": "Zpracování úlohy selhalo",
      "message": "Zpracování úlohy [{{taskType}}] na instanci [{{instanceId}}] selhalo."
    },
    "SCHEDULER_INVALID_CRON_EXPRESSION": {
      "title": "Chybný cron výraz",
      "message": "Zadaný cron výraz [{{cron}}] není validní."
    },
    "LONG_RUNNING_TASK_INTERRUPT": {
      "title": "Zpracování úlohy bylo přerušeno",
      "message": "Zpracování úlohy [{{taskType}}] na instanci [{{instanceId}}] bylo přerušeno ukončením vlákna."
    },
    "LONG_RUNNING_TASK_CANCELED_BY_RESTART": {
      "title": "Zpracování úlohy bylo přerušeno",
      "message": "Zpracování úlohy [{{taskType}}] na instanci [{{instanceId}}] bylo přerušeno - instance byla v průběhu zpracování vypnuta."
    },
    "LONG_RUNNING_TASK_NOT_RUNNING": {
      "title": "The task is already running",
      "message": "Task [{{taskType}}] on instance [{{instanceId}}] already ended."
    },
    "LONG_RUNNING_TASK_INIT_FAILED": {
      "title": "Task has invalid configuration",
      "message": "Task [{{taskType}}] has invalid configuration."
    },
    "FOREST_INDEX_DISABLED": {
      "title": "Index is disabled",
      "message": "Tree stucture indexing is disabled. Enable configuration property {{property}}."
    },
    "FOREST_INDEX_RUNNING": {
      "title": "Reindex already running",
      "message": "Reindex for tree structure {{type}} already running."
    },
    "NOTIFICATION_SYSTEM_TEMPLATE_DELETE_FAILED": {
      "title": "System template cant be deleted",
      "message": "[{{template}}] is system template, it can't be deleted."
    },
    "NOTIFICATION_TOPIC_AND_LEVEL_EXISTS": {
      "title": "Configuration can not be saved",
      "message": "Topic [{{topic}}] and null level exists!."
    },
    "ACCEPTED": {
      "title": "Request added",
      "message": "Request will be proccesed / approved."
    }
  },
  "validationError": {
    "string": {
      "min_1" : "Enter at least one character!",
      "min_2" : "Enter at least two characters!",
      "min_5" : "Enter at least {{count}} characters!",
      "base" : "Required field!",
      "email": "format of e-mail is not valid!",
      "max_1" : "Enter the maximum {{count}} character!",
      "max_2" : "Enter the maximum {{count}} characters!",
      "max_5" : "Enter the maximum {{count}} characters!"
    },
    "boolean": {
      "base": "$t(validationError.string.base)"
    },
    "any": {
      "allowOnly": "Required field!",
      "empty" : "$t(validationError.string.base)"
    },
    "object" : {
      "base" : "$t(validationError.string.base)"
    },
    "array" : {
      "base" : "$t(validationError.string.base)",
      "min_1" : "Enter at least one item!",
      "min_2" : "Enter at least two items!",
      "min_5" : "Enter at least {{count}} items!"
    },
    "date" : {
     "unvalid" : "Invalid date!"
    },
    "passwords_not_same": "Passwords must be the same!",
    "configurationSecured": "You dont have permissions to edit system configuration"
  },
  "security": {
    "access": {
      "denied": "Insufficient permissions",
      "link": {
        "denied": "You dont have perrmisions to see record details"
      }
    }
  }
}
